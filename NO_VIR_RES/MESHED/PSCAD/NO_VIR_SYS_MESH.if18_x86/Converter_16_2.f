!=======================================================================
! Generated by: PSCAD v5.0.1.0
! Warning:  The content of this file is automatically generated.
!           Do not modify, as any changes made here will be lost!
!-----------------------------------------------------------------------
! Component     : Converter_16_2
! Description   : 
!-----------------------------------------------------------------------


!=======================================================================

      SUBROUTINE Converter_16_2Dyn(Pref, Qref, UN, V_HV, len_mux)

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------

!     SUBR    Filter_L_1_1_1_2Dyn  ! 
!     SUBR    PQ_control_10_2Dyn  ! 
!     SUBR    VF_Control_7_2Dyn  ! 
!     SUBR    ConvBridge_IGBT_1Dyn  ! 
!     SUBR    EMTDC_X2COMP  ! 'Comparator with Interpolation'

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments
      REAL,    INTENT(IN)  :: Pref, Qref, UN
      REAL,    INTENT(IN)  :: V_HV, len_mux

! Electrical Node Indices

! Control Signals
      REAL     UFqref, Wint, Q, P, RT_1, RT_2
      REAL     RT_3, RT_4, Iinv(3), RT_5(6)
      REAL     Pmeas, Qmeas, RT_6(3), Fmeas, RT_7
      REAL     RT_8, RT_9, RT_10, RT_11, RT_12
      REAL     Qcontrol, RT_13, RT_14, RT_15
      REAL     RT_16, RT_17, RT_18, VRMS, VRMSF
      REAL     L_Load, R_Load, RT_19(3), Vpcc, Pg
      REAL     Ig, Qg, Wref, RT_20, Wsys, RT_21
      REAL     Igrid(3), IRMS, Lconv_G_1, RT_22
      REAL     L_grid, RT_23, R_grid, VrefGS_a_1
      REAL     VrefGS_b_1, VrefGS_c_1, RT_24
      REAL     freq_1_1, Cfreq_Gr_1, DBlk_Gr_1
      REAL     Va, Vb, Vc, Vgrid(3), Qref_, Pref_
      REAL     Vref_dq(3), V33(3), PG_, QG_
      REAL     Vrms_bus_pu

! Internal Variables
      INTEGER  IVD1_1
      REAL     RVD1_1, RVD1_2, RVD1_3, RVD1_4
      REAL     RVD2_1(2)

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOF, IT_0                         ! Storage Indices
      INTEGER ICX, IPGB                           ! Control/Monitoring
      INTEGER ISUBS, SS(2), IBRCH(2), INODE       ! SS/Node/Branch/Xfmr
      INTEGER IXFMR


!---------------------------------------
! Local Indices 
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      TXFR(NTXFR,1) = NSTOL
      TXFR(NTXFR,2) = NSTOI
      TXFR(NTXFR,3) = NSTOF
      TXFR(NTXFR,4) = NSTOC

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      ISTOF     = NSTOF
      NSTOF     = NSTOF + 89
      IPGB      = NPGB
      NPGB      = NPGB + 22
      ICX       = NCX
      NCX       = NCX + 11
      INODE     = NNODE + 2
      NNODE     = NNODE + 33
      IXFMR     = NXFMR
      NXFMR     = NXFMR + 3
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

! Initialize Subsystem Mapping

      ISUBS = NSUBS + 0
      NSUBS = NSUBS + 2

      DO IT_0 = 1,2
         SS(IT_0) = SUBS(ISUBS + IT_0)
      END DO

! Initialize Branch Mapping.

      IBRCH(1)     = NBRCH(SS(1))
      NBRCH(SS(1)) = NBRCH(SS(1)) + 35


      IBRCH(2)     = NBRCH(SS(2))
      NBRCH(SS(2)) = NBRCH(SS(2)) + 1

!---------------------------------------
! Transfers from storage arrays 
!---------------------------------------

      UFqref   = STOF(ISTOF + 6)
      Wint     = STOF(ISTOF + 7)
      Q        = STOF(ISTOF + 8)
      P        = STOF(ISTOF + 9)
      RT_1     = STOF(ISTOF + 10)
      RT_2     = STOF(ISTOF + 11)
      RT_3     = STOF(ISTOF + 12)
      RT_4     = STOF(ISTOF + 13)
      Pmeas    = STOF(ISTOF + 23)
      Qmeas    = STOF(ISTOF + 24)
      Fmeas    = STOF(ISTOF + 28)
      RT_7     = STOF(ISTOF + 29)
      RT_8     = STOF(ISTOF + 30)
      RT_9     = STOF(ISTOF + 31)
      RT_10    = STOF(ISTOF + 32)
      RT_11    = STOF(ISTOF + 33)
      RT_12    = STOF(ISTOF + 34)
      Qcontrol = STOF(ISTOF + 35)
      RT_13    = STOF(ISTOF + 36)
      RT_14    = STOF(ISTOF + 37)
      RT_15    = STOF(ISTOF + 38)
      RT_16    = STOF(ISTOF + 39)
      RT_17    = STOF(ISTOF + 40)
      RT_18    = STOF(ISTOF + 41)
      VRMS     = STOF(ISTOF + 42)
      VRMSF    = STOF(ISTOF + 43)
      L_Load   = STOF(ISTOF + 44)
      R_Load   = STOF(ISTOF + 45)
      Vpcc     = STOF(ISTOF + 49)
      Pg       = STOF(ISTOF + 50)
      Ig       = STOF(ISTOF + 51)
      Qg       = STOF(ISTOF + 52)
      Wref     = STOF(ISTOF + 53)
      RT_20    = STOF(ISTOF + 54)
      Wsys     = STOF(ISTOF + 55)
      RT_21    = STOF(ISTOF + 56)
      IRMS     = STOF(ISTOF + 60)
      Lconv_G_1 = STOF(ISTOF + 61)
      RT_22    = STOF(ISTOF + 62)
      L_grid   = STOF(ISTOF + 63)
      RT_23    = STOF(ISTOF + 64)
      R_grid   = STOF(ISTOF + 65)
      VrefGS_a_1 = STOF(ISTOF + 66)
      VrefGS_b_1 = STOF(ISTOF + 67)
      VrefGS_c_1 = STOF(ISTOF + 68)
      RT_24    = STOF(ISTOF + 69)
      freq_1_1 = STOF(ISTOF + 70)
      Cfreq_Gr_1 = STOF(ISTOF + 71)
      DBlk_Gr_1 = STOF(ISTOF + 72)
      Va       = STOF(ISTOF + 73)
      Vb       = STOF(ISTOF + 74)
      Vc       = STOF(ISTOF + 75)
      Qref_    = STOF(ISTOF + 79)
      Pref_    = STOF(ISTOF + 80)
      PG_      = STOF(ISTOF + 87)
      QG_      = STOF(ISTOF + 88)
      Vrms_bus_pu = STOF(ISTOF + 89)

! Array (1:3) quantities...
      DO IT_0 = 1,3
         Iinv(IT_0) = STOF(ISTOF + 13 + IT_0)
         RT_6(IT_0) = STOF(ISTOF + 24 + IT_0)
         RT_19(IT_0) = STOF(ISTOF + 45 + IT_0)
         Igrid(IT_0) = STOF(ISTOF + 56 + IT_0)
         Vgrid(IT_0) = STOF(ISTOF + 75 + IT_0)
         Vref_dq(IT_0) = STOF(ISTOF + 80 + IT_0)
         V33(IT_0) = STOF(ISTOF + 83 + IT_0)
      END DO

! Array (1:6) quantities...
      DO IT_0 = 1,6
         RT_5(IT_0) = STOF(ISTOF + 16 + IT_0)
      END DO


!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Configuration of Models 
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'Converter_16_2.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSD:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 20:[var] Variable Input Slider 'KPg'
      Pg = CX(CXMAP(ICX+1))

! 30:[var] Variable Input Slider 'Pref'
      Pref_ = CX(CXMAP(ICX+2))

! 40:[var] Variable Input Slider 'KQg'
      Qg = CX(CXMAP(ICX+3))

! 50:[var] Variable Input Slider 'Qref'
      Qref_ = CX(CXMAP(ICX+4))

! 60:[var] Variable Input Slider 'KIg'
      Ig = CX(CXMAP(ICX+5))

! 70:[const] Real Constant 
      RT_14 = 0.0

! 80:[const] Real Constant 
      RT_13 = 0.5

! 90:[var] Variable Input Slider 'Wref'
      Wref = CX(CXMAP(ICX+6))

! 100:[time-sig] Output of Simulation Time 
      RT_15 = TIME

! 110:[const] Real Constant 
      RT_16 = 2.0

! 120:[var] Variable Input Slider 'Vpcc'
      Vpcc = CX(CXMAP(ICX+7))

! 130:[var_switch] Two State Switch 'Qcontrol'
      Qcontrol = CX(CXMAP(ICX+8))

! 140:[var] Variable Input Slider 'R_Load'
      R_Load = CX(CXMAP(ICX+9))

! 150:[emtconst] Commonly Used Constants (pi...) 
      RT_21 = TWO_PI

! 160:[var] Variable Input Slider 'L_Load'
      L_Load = CX(CXMAP(ICX+10))

! 170:[const] Real Constant 'R'
      RT_23 = 0.005

! 180:[const] Real Constant 
      RT_4 = 20.0

! 210:[const] Real Constant '[H]_1'
      Lconv_G_1 = 0.000335

! 220:[const] Real Constant 'H'
      RT_22 = 4.0e-05

! 230:[emtconst] Commonly Used Constants (pi...) 
      RT_8 = TWO_PI

! 270:[varrlc] Variable R, L or C  
      CALL COMPONENT_ID(ICALL_NO,1359134167)
      CALL E_VARRLC1_EXE(1 ,SS(1) ,  (IBRCH(1)+28), 0, Lconv_G_1, 0.0)
      CALL E_VARRLC1_EXE(1 ,SS(1) ,  (IBRCH(1)+29), 0, Lconv_G_1, 0.0)
      CALL E_VARRLC1_EXE(1 ,SS(1) ,  (IBRCH(1)+30), 0, Lconv_G_1, 0.0)

! 300:[const] Real Constant 
      RT_3 = 5.0

! 310:[xfmr-3p2w] 3 Phase 2 Winding Transformer 
!  TRANSFORMER SATURATION SUBROUTINE
      IVD1_1 = NEXC
      CALL TSAT2_EXE((IXFMR + 1),(IXFMR + 2),(IXFMR + 3), (IBRCH(1)+16),&
     & (IBRCH(1)+17), (IBRCH(1)+18), (IBRCH(1)+19), (IBRCH(1)+20), (IBRC&
     &H(1)+21),0,0,0,0,0,0,SS(1),0,1.0,0)

! 330:[var_switch] Two State Switch 'Constant VF control'
      RT_1 = CX(CXMAP(ICX+11))

! 350:[Filter_L_1_1_1_2]  
      CALL Filter_L_1_1_1_2Dyn(0, 0.000621, 700.0, 700.0, 1.332, 900.0, &
     &Lconv_G_1)


! 360:[const] Real Constant 
      DBlk_Gr_1 = 1.0

! 370:[unity] Type/Shape conversion block 
! integer -> real
      RT_24 = REAL(NINT(DBlk_Gr_1))

! 380:[const] Real Constant 
      freq_1_1 = 50.0

! 390:[const] Real Constant 
      Cfreq_Gr_1 = 60.0

! 440:[mult] Multiplier 
      R_grid = RT_23 * len_mux

! 450:[mult] Multiplier 
      L_grid = RT_22 * len_mux

! 470:[mult] Multiplier 
      RT_2 = Fmeas * RT_8

! 480:[PQ_control_10_2]  
      CALL PQ_control_10_2Dyn(UFqref, Wint, Wref, Qref, Pref, Q, P, Pg, &
     &Ig, Qg, Vpcc, RT_1, VRMSF, RT_2, Qcontrol, RT_3, RT_4, 0.69, 376.9&
     &91)


! 490:[VF_Control_7_2]  
      CALL VF_Control_7_2Dyn(Vref_dq, Igrid, Vgrid, Iinv, Wint, UFqref, &
     &Wsys, P, Q, Wref, 0.69, 1.6735, 376.991, Lconv_G_1, 0.0007)


! 500:[datatap] Scalar/Array Tap 
      VrefGS_c_1 = Vref_dq(3)

! 510:[datatap] Scalar/Array Tap 
      VrefGS_b_1 = Vref_dq(2)

! 520:[datatap] Scalar/Array Tap 
      VrefGS_a_1 = Vref_dq(1)

! 530:[datamerge] Merges data signals into an array 
      RT_5(1) = VrefGS_a_1
      RT_5(2) = VrefGS_b_1
      RT_5(3) = VrefGS_c_1
      RT_5(4) = RT_24
      RT_5(5) = freq_1_1
      RT_5(6) = Cfreq_Gr_1

! 540:[div] Divider 
      IF (ABS(RT_21) .LT. 1.0E-100) THEN
         IF (RT_21 .LT. 0.0)  THEN
            RT_20 = -1.0E100 * Wsys
         ELSE
            RT_20 =  1.0E100 * Wsys
         ENDIF
      ELSE
         RT_20 = Wsys / RT_21
      ENDIF

! 550:[gain] Gain Block 
!  Gain
      RT_19 = 0.001 * Vref_dq

! 560:[gain] Gain Block 
!  Gain
      RT_6 = 0.001 * Vref_dq

! 580:[ConvBridge_IGBT_1]  
      CALL ConvBridge_IGBT_1Dyn(RT_5)


! 590:[varrlc] Variable R, L or C  
      CALL COMPONENT_ID(ICALL_NO,2001053596)
      CALL E_VARRLC1_EXE(1 ,SS(1) ,  (IBRCH(1)+31), 0, L_grid, 0.0)
      CALL E_VARRLC1_EXE(1 ,SS(1) ,  (IBRCH(1)+32), 0, L_grid, 0.0)
      CALL E_VARRLC1_EXE(1 ,SS(1) ,  (IBRCH(1)+33), 0, L_grid, 0.0)

! 600:[pgb] Output Channel 'Pdq'

      PGB(IPGB+1) = P

! 610:[varrlc] Variable R, L or C  
      CALL COMPONENT_ID(ICALL_NO,342949850)
      CALL E_VARRLC1_EXE(0 ,SS(1) ,  (IBRCH(1)+25), 0, R_grid, 0.0)
      CALL E_VARRLC1_EXE(0 ,SS(1) ,  (IBRCH(1)+26), 0, R_grid, 0.0)
      CALL E_VARRLC1_EXE(0 ,SS(1) ,  (IBRCH(1)+27), 0, R_grid, 0.0)

! 620:[datatap] Scalar/Array Tap 
      Va = Vref_dq(1)

! 630:[datatap] Scalar/Array Tap 
      Vb = Vref_dq(2)

! 640:[datatap] Scalar/Array Tap 
      Vc = Vref_dq(3)

! 650:[pgb] Output Channel 'Frequency_int'

      PGB(IPGB+2) = RT_20

! 670:[pgb] Output Channel 'VA_Ref'

      DO IVD1_1 = 1, 3
         PGB(IPGB+4+IVD1_1-1) = RT_19(IVD1_1)
      ENDDO

! 700:[pgb] Output Channel 'VA_Ref'

      DO IVD1_1 = 1, 3
         PGB(IPGB+11+IVD1_1-1) = RT_6(IVD1_1)
      ENDDO

! 710:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,RT_15,RT_16,1.0,0.0,0.0,RVD2_1)
      RT_17 = RVD2_1(1)

! 730:[select] Two Input Selector 
      IF (NINT(RT_17) .EQ. RTCI(NRTCI)) THEN
         RT_18 = RT_14
      ELSE
         RT_18 = RT_13
      ENDIF
      NRTCI = NRTCI + 1
!

! 1:[source_1] Single Phase Voltage Source Model 2 'Source1_1_1'
!  DC source: Type: Ideal
      RVD1_1 = RTCF(NRTCF)
      RVD1_2 = RTCF(NRTCF+1)
      RVD1_3 = RTCF(NRTCF+2)
      RVD1_4 = RTCF(NRTCF+3)
      NRTCF = NRTCF + 4
      CALL EMTDC_1PVSRC(SS(2), (IBRCH(2)+1),RVD1_4,0,RVD1_1,RVD1_2,RVD1_&
     &3)

!---------------------------------------
! Feedbacks and transfers to storage 
!---------------------------------------

      STOF(ISTOF + 1) = Pref
      STOF(ISTOF + 2) = Qref
      STOF(ISTOF + 3) = UN
      STOF(ISTOF + 4) = V_HV
      STOF(ISTOF + 5) = len_mux
      STOF(ISTOF + 6) = UFqref
      STOF(ISTOF + 7) = Wint
      STOF(ISTOF + 8) = Q
      STOF(ISTOF + 9) = P
      STOF(ISTOF + 10) = RT_1
      STOF(ISTOF + 11) = RT_2
      STOF(ISTOF + 12) = RT_3
      STOF(ISTOF + 13) = RT_4
      STOF(ISTOF + 23) = Pmeas
      STOF(ISTOF + 24) = Qmeas
      STOF(ISTOF + 28) = Fmeas
      STOF(ISTOF + 29) = RT_7
      STOF(ISTOF + 30) = RT_8
      STOF(ISTOF + 31) = RT_9
      STOF(ISTOF + 32) = RT_10
      STOF(ISTOF + 33) = RT_11
      STOF(ISTOF + 34) = RT_12
      STOF(ISTOF + 35) = Qcontrol
      STOF(ISTOF + 36) = RT_13
      STOF(ISTOF + 37) = RT_14
      STOF(ISTOF + 38) = RT_15
      STOF(ISTOF + 39) = RT_16
      STOF(ISTOF + 40) = RT_17
      STOF(ISTOF + 41) = RT_18
      STOF(ISTOF + 42) = VRMS
      STOF(ISTOF + 43) = VRMSF
      STOF(ISTOF + 44) = L_Load
      STOF(ISTOF + 45) = R_Load
      STOF(ISTOF + 49) = Vpcc
      STOF(ISTOF + 50) = Pg
      STOF(ISTOF + 51) = Ig
      STOF(ISTOF + 52) = Qg
      STOF(ISTOF + 53) = Wref
      STOF(ISTOF + 54) = RT_20
      STOF(ISTOF + 55) = Wsys
      STOF(ISTOF + 56) = RT_21
      STOF(ISTOF + 60) = IRMS
      STOF(ISTOF + 61) = Lconv_G_1
      STOF(ISTOF + 62) = RT_22
      STOF(ISTOF + 63) = L_grid
      STOF(ISTOF + 64) = RT_23
      STOF(ISTOF + 65) = R_grid
      STOF(ISTOF + 66) = VrefGS_a_1
      STOF(ISTOF + 67) = VrefGS_b_1
      STOF(ISTOF + 68) = VrefGS_c_1
      STOF(ISTOF + 69) = RT_24
      STOF(ISTOF + 70) = freq_1_1
      STOF(ISTOF + 71) = Cfreq_Gr_1
      STOF(ISTOF + 72) = DBlk_Gr_1
      STOF(ISTOF + 73) = Va
      STOF(ISTOF + 74) = Vb
      STOF(ISTOF + 75) = Vc
      STOF(ISTOF + 79) = Qref_
      STOF(ISTOF + 80) = Pref_
      STOF(ISTOF + 87) = PG_
      STOF(ISTOF + 88) = QG_
      STOF(ISTOF + 89) = Vrms_bus_pu

! Array (1:3) quantities...
      DO IT_0 = 1,3
         STOF(ISTOF + 13 + IT_0) = Iinv(IT_0)
         STOF(ISTOF + 24 + IT_0) = RT_6(IT_0)
         STOF(ISTOF + 45 + IT_0) = RT_19(IT_0)
         STOF(ISTOF + 56 + IT_0) = Igrid(IT_0)
         STOF(ISTOF + 75 + IT_0) = Vgrid(IT_0)
         STOF(ISTOF + 80 + IT_0) = Vref_dq(IT_0)
         STOF(ISTOF + 83 + IT_0) = V33(IT_0)
      END DO

! Array (1:6) quantities...
      DO IT_0 = 1,6
         STOF(ISTOF + 16 + IT_0) = RT_5(IT_0)
      END DO


!---------------------------------------
! Transfer to Exports
!---------------------------------------

!---------------------------------------
! Close Model Data read 
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE Converter_16_2Out()

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------

      REAL    EMTDC_VVDC    ! 
      REAL    P3PH3         ! 
      REAL    Q3PH3         ! 
      REAL    VM3PH2        ! '3 Phase RMS Voltage Measurement'
      REAL    RMS3PH        ! '3 Phase RMS Measurement'
      REAL    REALPOLE      ! 
!     SUBR    DGTL_RMS3     ! '3 Phase Digital RMS Meter'
!     SUBR    Filter_L_1_1_1_2Out  ! 
!     SUBR    PQ_control_10_2Out  ! 
!     SUBR    VF_Control_7_2Out  ! 
!     SUBR    ConvBridge_IGBT_1Out  ! 

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Electrical Node Indices
      INTEGER  NT_7(3), NT_9(3), NT_12(3)

! Control Signals
      REAL     RT_3, RT_4, Iinv(3), Pmeas, Qmeas
      REAL     Fmeas, RT_7, RT_8, RT_9, RT_10
      REAL     RT_11, RT_12, RT_13, RT_14, RT_16
      REAL     VRMS, VRMSF, RT_21, Igrid(3), IRMS
      REAL     Lconv_G_1, RT_22, RT_23, freq_1_1
      REAL     Cfreq_Gr_1, DBlk_Gr_1, Vgrid(3)
      REAL     V33(3), PG_, QG_, Vrms_bus_pu

! Internal Variables
      INTEGER  IVD1_1
      REAL     RVD1_1, RVD1_2, RVD1_3

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOL, ISTOI, ISTOF, ISTOC, IT_0    ! Storage Indices
      INTEGER IPGB                                ! Control/Monitoring
      INTEGER ISUBS, SS(2), IBRCH(2), INODE       ! SS/Node/Branch/Xfmr
      INTEGER IXFMR


!---------------------------------------
! Local Indices 
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      ISTOL = TXFR(NTXFR,1)
      ISTOI = TXFR(NTXFR,2)
      ISTOF = TXFR(NTXFR,3)
      ISTOC = TXFR(NTXFR,4)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      IPGB      = NPGB
      NPGB      = NPGB + 22
      NCX       = NCX + 0
      INODE     = NNODE + 2
      NNODE     = NNODE + 33
      IXFMR     = NXFMR
      NXFMR     = NXFMR + 3
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

! Initialize Subsystem Mapping

      ISUBS = NSUBS + 0
      NSUBS = NSUBS + 2

      DO IT_0 = 1,2
         SS(IT_0) = SUBS(ISUBS + IT_0)
      END DO

! Initialize Branch Mapping.

      IBRCH(1)     = NBRCH(SS(1))
      NBRCH(SS(1)) = NBRCH(SS(1)) + 35


      IBRCH(2)     = NBRCH(SS(2))
      NBRCH(SS(2)) = NBRCH(SS(2)) + 1

!---------------------------------------
! Transfers from storage arrays 
!---------------------------------------

      RT_3     = STOF(ISTOF + 12)
      RT_4     = STOF(ISTOF + 13)
      Pmeas    = STOF(ISTOF + 23)
      Qmeas    = STOF(ISTOF + 24)
      Fmeas    = STOF(ISTOF + 28)
      RT_7     = STOF(ISTOF + 29)
      RT_8     = STOF(ISTOF + 30)
      RT_9     = STOF(ISTOF + 31)
      RT_10    = STOF(ISTOF + 32)
      RT_11    = STOF(ISTOF + 33)
      RT_12    = STOF(ISTOF + 34)
      RT_13    = STOF(ISTOF + 36)
      RT_14    = STOF(ISTOF + 37)
      RT_16    = STOF(ISTOF + 39)
      VRMS     = STOF(ISTOF + 42)
      VRMSF    = STOF(ISTOF + 43)
      RT_21    = STOF(ISTOF + 56)
      IRMS     = STOF(ISTOF + 60)
      Lconv_G_1 = STOF(ISTOF + 61)
      RT_22    = STOF(ISTOF + 62)
      RT_23    = STOF(ISTOF + 64)
      freq_1_1 = STOF(ISTOF + 70)
      Cfreq_Gr_1 = STOF(ISTOF + 71)
      DBlk_Gr_1 = STOF(ISTOF + 72)
      PG_      = STOF(ISTOF + 87)
      QG_      = STOF(ISTOF + 88)
      Vrms_bus_pu = STOF(ISTOF + 89)

! Array (1:3) quantities...
      DO IT_0 = 1,3
         Iinv(IT_0) = STOF(ISTOF + 13 + IT_0)
         Igrid(IT_0) = STOF(ISTOF + 56 + IT_0)
         Vgrid(IT_0) = STOF(ISTOF + 75 + IT_0)
         V33(IT_0) = STOF(ISTOF + 83 + IT_0)
      END DO


!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


! Array (1:3) quantities...
      DO IT_0 = 1,3
         NT_7(IT_0) = NODE(INODE + 13 + IT_0)
         NT_9(IT_0) = NODE(INODE + 19 + IT_0)
         NT_12(IT_0) = NODE(INODE + 28 + IT_0)
      END DO

!---------------------------------------
! Configuration of Models 
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'Converter_16_2.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSO:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 70:[const] Real Constant 

      RT_14 = 0.0

! 80:[const] Real Constant 

      RT_13 = 0.5

! 110:[const] Real Constant 

      RT_16 = 2.0

! 150:[emtconst] Commonly Used Constants (pi...) 
      RT_21 = TWO_PI

! 170:[const] Real Constant 'R'

      RT_23 = 0.005

! 180:[const] Real Constant 

      RT_4 = 20.0

! 210:[const] Real Constant '[H]_1'

      Lconv_G_1 = 0.000335

! 220:[const] Real Constant 'H'

      RT_22 = 4.0e-05

! 230:[emtconst] Commonly Used Constants (pi...) 
      RT_8 = TWO_PI

! 280:[multimeter] Multimeter 
      IVD1_1 = NRTCF
      NRTCF  = NRTCF + 5
      Iinv(1) = ( CBR((IBRCH(1)+1), SS(1)))
      Iinv(2) = ( CBR((IBRCH(1)+2), SS(1)))
      Iinv(3) = ( CBR((IBRCH(1)+3), SS(1)))
      Vgrid(1) = EMTDC_VVDC(SS(1), NT_9(1), 0)
      Vgrid(2) = EMTDC_VVDC(SS(1), NT_9(2), 0)
      Vgrid(3) = EMTDC_VVDC(SS(1), NT_9(3), 0)
      RVD1_1 = RTCF(IVD1_1) * P3PH3(SS(1), (IBRCH(1)+1), (IBRCH(1)+2), (&
     &IBRCH(1)+3),RTCF(IVD1_1+2),0)
      IF (UPDATE_AG) CALL PSCAD_AGR2(ICALL_NO,361359915,RVD1_1,"Pd")
      Pmeas = RVD1_1
      RVD1_1 = RTCF(IVD1_1) * Q3PH3(SS(1), (IBRCH(1)+1), (IBRCH(1)+2), (&
     &IBRCH(1)+3),RTCF(IVD1_1+2),0)
      IF (UPDATE_AG) CALL PSCAD_AGR2(ICALL_NO,361359915,RVD1_1,"Qd")
      Qmeas = RVD1_1
      RVD1_1 = RTCF(IVD1_1+1) * VM3PH2(SS(1), NT_9(1), NT_9(2), NT_9(3),&
     & RTCF(IVD1_1+2))
      IF (UPDATE_AG) CALL PSCAD_AGR2(ICALL_NO,361359915,RVD1_1,"Vd")
      VRMS = RVD1_1
      RVD1_1 = RMS3PH(( CBR((IBRCH(1)+1), SS(1))),( CBR((IBRCH(1)+2), SS&
     &(1))),( CBR((IBRCH(1)+3), SS(1))))
      RVD1_1 = REALPOLE(0,1,0,RTCF(IVD1_1+4),RTCF(IVD1_1+2),RVD1_1,0.0,0&
     &.0,RTCF(IVD1_1+2))
      IRMS = RVD1_1
      IF (FIRSTSTEP) THEN
        CALL PSCAD_AGI2(ICALL_NO,361359915,1,"hide1")
        CALL PSCAD_AGI2(ICALL_NO,361359915,1,"hide2")
      ENDIF

! 290:[ammeter] Current Meter 'Igrid'
      Igrid(1) = ( CBR((IBRCH(1)+4), SS(1)))
      Igrid(2) = ( CBR((IBRCH(1)+5), SS(1)))
      Igrid(3) = ( CBR((IBRCH(1)+6), SS(1)))

! 300:[const] Real Constant 

      RT_3 = 5.0

! 320:[multimeter] Multimeter 
      IVD1_1 = NRTCF
      NRTCF  = NRTCF + 5
      V33(1) = EMTDC_VVDC(SS(1), NT_7(1), 0)
      V33(2) = EMTDC_VVDC(SS(1), NT_7(2), 0)
      V33(3) = EMTDC_VVDC(SS(1), NT_7(3), 0)
      RVD1_1 = RTCF(IVD1_1) * P3PH3(SS(1), (IBRCH(1)+7), (IBRCH(1)+8), (&
     &IBRCH(1)+9),RTCF(IVD1_1+2),0)
      IF (UPDATE_AG) CALL PSCAD_AGR2(ICALL_NO,1644396626,RVD1_1,"Pd")
      PG_ = RVD1_1
      RVD1_1 = RTCF(IVD1_1) * Q3PH3(SS(1), (IBRCH(1)+7), (IBRCH(1)+8), (&
     &IBRCH(1)+9),RTCF(IVD1_1+2),0)
      IF (UPDATE_AG) CALL PSCAD_AGR2(ICALL_NO,1644396626,RVD1_1,"Qd")
      QG_ = RVD1_1
      CALL DGTL_RMS3(256,SS(1),NT_7(1),NT_7(2),NT_7(3),RTCF(IVD1_1+3),1.&
     &0,0.0,RVD1_1)
      RVD1_1 = RTCF(IVD1_1+1)*RVD1_1
      IF (UPDATE_AG) CALL PSCAD_AGR2(ICALL_NO,1644396626,RVD1_1,"Vd")
      Vrms_bus_pu = RVD1_1
      IF (FIRSTSTEP) THEN
        CALL PSCAD_AGI2(ICALL_NO,1644396626,1,"hide1")
        CALL PSCAD_AGI2(ICALL_NO,1644396626,1,"hide2")
      ENDIF

! 340:[multimeter] Multimeter 
      IVD1_1 = NRTCF
      NRTCF  = NRTCF + 5
      RVD1_1 = RTCF(IVD1_1) * P3PH3(SS(1), (IBRCH(1)+22), (IBRCH(1)+23),&
     & (IBRCH(1)+24),RTCF(IVD1_1+2),0)
      IF (UPDATE_AG) CALL PSCAD_AGR2(ICALL_NO,1673728559,RVD1_1,"Pd")
      RVD1_1 = RTCF(IVD1_1) * Q3PH3(SS(1), (IBRCH(1)+22), (IBRCH(1)+23),&
     & (IBRCH(1)+24),RTCF(IVD1_1+2),0)
      IF (UPDATE_AG) CALL PSCAD_AGR2(ICALL_NO,1673728559,RVD1_1,"Qd")
      RVD1_1 = RTCF(IVD1_1+1) * VM3PH2(SS(1), NT_12(1), NT_12(2), NT_12(&
     &3), RTCF(IVD1_1+2))
      IF (UPDATE_AG) CALL PSCAD_AGR2(ICALL_NO,1673728559,RVD1_1,"Vd")
      IF (FIRSTSTEP) THEN
        CALL PSCAD_AGI2(ICALL_NO,1673728559,1,"hide1")
        CALL PSCAD_AGI2(ICALL_NO,1673728559,1,"hide2")
      ENDIF

! 350:[Filter_L_1_1_1_2]  
      CALL Filter_L_1_1_1_2Out()


! 360:[const] Real Constant 

      DBlk_Gr_1 = 1.0

! 380:[const] Real Constant 

      freq_1_1 = 50.0

! 390:[const] Real Constant 

      Cfreq_Gr_1 = 60.0

! 400:[realpole] Real Pole 
!  Real_Pole
      VRMSF = REALPOLE(0,1,0,1.0,0.02,VRMS,0.0,-1.0E20,1.0E20)

! 410:[datatap] Scalar/Array Tap 
      RT_9 = Vgrid(1)

! 420:[datatap] Scalar/Array Tap 
      RT_10 = Vgrid(2)

! 430:[datatap] Scalar/Array Tap 
      RT_11 = Vgrid(3)

! 460:[tvekta] Phase-Locked Loop 
      RVD1_1 = 0.0*PI_BY180
      CALL COMPONENT_ID(ICALL_NO,1580863052)
      CALL TVEKA1_EXE(RT_9,RT_10,RT_11,50.0,900.0,RVD1_1,0.05,1.2,0.8,RT&
     &_12,RVD1_3,RVD1_2)
      RT_12 = RT_12*BY180_PI
      Fmeas = RVD1_2
!

! 480:[PQ_control_10_2]  
      CALL PQ_control_10_2Out()


! 490:[VF_Control_7_2]  
      CALL VF_Control_7_2Out()


! 570:[realpole] Real Pole 
!  Real_Pole
      RT_7 = REALPOLE(0,1,0,1.0,0.02,Fmeas,0.0,-1.0E20,1.0E20)

! 580:[ConvBridge_IGBT_1]  
      CALL ConvBridge_IGBT_1Out()


! 660:[pgb] Output Channel 'Pmeas'

      PGB(IPGB+3) = Pmeas

! 680:[pgb] Output Channel 'Qmeas'

      PGB(IPGB+7) = Qmeas

! 690:[pgb] Output Channel 'Igrid'

      DO IVD1_1 = 1, 3
         PGB(IPGB+8+IVD1_1-1) = Igrid(IVD1_1)
      ENDDO

! 720:[pgb] Output Channel 'Irms'

      PGB(IPGB+14) = IRMS

! 740:[pgb] Output Channel 'I_inverter'

      DO IVD1_1 = 1, 3
         PGB(IPGB+15+IVD1_1-1) = Iinv(IVD1_1)
      ENDDO

! 750:[pgb] Output Channel 'Fmeas'

      PGB(IPGB+18) = RT_7

! 760:[pgb] Output Channel 'Vgrid'

      DO IVD1_1 = 1, 3
         PGB(IPGB+19+IVD1_1-1) = Vgrid(IVD1_1)
      ENDDO

! 770:[pgb] Output Channel 'V_rms'

      PGB(IPGB+22) = VRMSF

!---------------------------------------
! Feedbacks and transfers to storage 
!---------------------------------------

      STOF(ISTOF + 12) = RT_3
      STOF(ISTOF + 13) = RT_4
      STOF(ISTOF + 23) = Pmeas
      STOF(ISTOF + 24) = Qmeas
      STOF(ISTOF + 28) = Fmeas
      STOF(ISTOF + 29) = RT_7
      STOF(ISTOF + 30) = RT_8
      STOF(ISTOF + 31) = RT_9
      STOF(ISTOF + 32) = RT_10
      STOF(ISTOF + 33) = RT_11
      STOF(ISTOF + 34) = RT_12
      STOF(ISTOF + 36) = RT_13
      STOF(ISTOF + 37) = RT_14
      STOF(ISTOF + 39) = RT_16
      STOF(ISTOF + 42) = VRMS
      STOF(ISTOF + 43) = VRMSF
      STOF(ISTOF + 56) = RT_21
      STOF(ISTOF + 60) = IRMS
      STOF(ISTOF + 61) = Lconv_G_1
      STOF(ISTOF + 62) = RT_22
      STOF(ISTOF + 64) = RT_23
      STOF(ISTOF + 70) = freq_1_1
      STOF(ISTOF + 71) = Cfreq_Gr_1
      STOF(ISTOF + 72) = DBlk_Gr_1
      STOF(ISTOF + 87) = PG_
      STOF(ISTOF + 88) = QG_
      STOF(ISTOF + 89) = Vrms_bus_pu

! Array (1:3) quantities...
      DO IT_0 = 1,3
         STOF(ISTOF + 13 + IT_0) = Iinv(IT_0)
         STOF(ISTOF + 56 + IT_0) = Igrid(IT_0)
         STOF(ISTOF + 75 + IT_0) = Vgrid(IT_0)
         STOF(ISTOF + 83 + IT_0) = V33(IT_0)
      END DO


!---------------------------------------
! Close Model Data read 
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE Converter_16_2Dyn_Begin(UN, V_HV)

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------

!     SUBR    Filter_L_1_1_1_2Dyn_Begin  ! 
!     SUBR    PQ_control_10_2Dyn_Begin  ! 
!     SUBR    VF_Control_7_2Dyn_Begin  ! 
!     SUBR    ConvBridge_IGBT_1Dyn_Begin  ! 

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments
      REAL,    INTENT(IN)  :: UN, V_HV

! Electrical Node Indices

! Control Signals
      REAL     RT_3, RT_4, RT_8, RT_13, RT_14
      REAL     RT_16, RT_21, Lconv_G_1, RT_22
      REAL     RT_23, freq_1_1, Cfreq_Gr_1
      REAL     DBlk_Gr_1

! Internal Variables
      INTEGER  IVD1_1
      REAL     RVD1_1, RVD1_2, RVD1_3, RVD1_4
      REAL     RVD1_5, RVD1_6

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER IT_0                                ! Storage Indices
      INTEGER ICX                                 ! Control/Monitoring
      INTEGER ISUBS, SS(2), IBRCH(2), INODE       ! SS/Node/Branch/Xfmr
      INTEGER IXFMR


!---------------------------------------
! Local Indices 
!---------------------------------------


! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      ICX       = NCX
      NCX       = NCX + 11
      INODE     = NNODE + 2
      NNODE     = NNODE + 33
      IXFMR     = NXFMR
      NXFMR     = NXFMR + 3
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

! Initialize Subsystem Mapping

      ISUBS = NSUBS + 0
      NSUBS = NSUBS + 2

      DO IT_0 = 1,2
         SS(IT_0) = SUBS(ISUBS + IT_0)
      END DO

! Initialize Branch Mapping.

      IBRCH(1)     = NBRCH(SS(1))
      NBRCH(SS(1)) = NBRCH(SS(1)) + 35


      IBRCH(2)     = NBRCH(SS(2))
      NBRCH(SS(2)) = NBRCH(SS(2)) + 1

!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 20:[var] Variable Input Slider 'KPg'

! 30:[var] Variable Input Slider 'Pref'

! 40:[var] Variable Input Slider 'KQg'

! 50:[var] Variable Input Slider 'Qref'

! 60:[var] Variable Input Slider 'KIg'

! 70:[const] Real Constant 
      RT_14 = 0.0

! 80:[const] Real Constant 
      RT_13 = 0.5

! 90:[var] Variable Input Slider 'Wref'

! 100:[time-sig] Output of Simulation Time 

! 110:[const] Real Constant 
      RT_16 = 2.0

! 120:[var] Variable Input Slider 'Vpcc'

! 130:[var_switch] Two State Switch 'Qcontrol'

! 140:[var] Variable Input Slider 'R_Load'

! 150:[emtconst] Commonly Used Constants (pi...) 
      RT_21 = TWO_PI

! 160:[var] Variable Input Slider 'L_Load'

! 170:[const] Real Constant 'R'
      RT_23 = 0.005

! 180:[const] Real Constant 
      RT_4 = 20.0

! 210:[const] Real Constant '[H]_1'
      Lconv_G_1 = 0.000335

! 220:[const] Real Constant 'H'
      RT_22 = 4.0e-05

! 230:[emtconst] Commonly Used Constants (pi...) 
      RT_8 = TWO_PI

! 270:[varrlc] Variable R, L or C  
      CALL E_VARRLC1_CFG(1 ,SS(1) ,  (IBRCH(1)+28), 0)
      CALL E_VARRLC1_CFG(1 ,SS(1) ,  (IBRCH(1)+29), 0)
      CALL E_VARRLC1_CFG(1 ,SS(1) ,  (IBRCH(1)+30), 0)

! 300:[const] Real Constant 
      RT_3 = 5.0

! 310:[xfmr-3p2w] 3 Phase 2 Winding Transformer 
      CALL COMPONENT_ID(ICALL_NO,943707706)
      RVD1_1 = ONE_3RD*2.0
      RVD1_2 = V_HV*SQRT_1BY3
      RVD1_3 = 0.69*SQRT_1BY3
      CALL E_TF2W_CFG((IXFMR + 1),1,RVD1_1,60.0,0.05,0.0,RVD1_2,RVD1_3,0&
     &.4)
      CALL E_TF2W_CFG((IXFMR + 2),1,RVD1_1,60.0,0.05,0.0,RVD1_2,RVD1_3,0&
     &.4)
      CALL E_TF2W_CFG((IXFMR + 3),1,RVD1_1,60.0,0.05,0.0,RVD1_2,RVD1_3,0&
     &.4)
      IF (0.0 .LT. 1.0E-6) THEN
        RVD1_5 = 0.0
        RVD1_6 = 0.0
        IVD1_1 = 0
      ELSE
        RVD1_6 = 0.0
        RVD1_4 = 6.0/(2.0*RVD1_6)
        RVD1_5 = RVD1_4*RVD1_2*RVD1_2
        RVD1_6 = RVD1_4*RVD1_3*RVD1_3
        IVD1_1 = 1
      ENDIF
      CALL E_BRANCH_CFG( (IBRCH(1)+10),SS(1),IVD1_1,0,0,RVD1_5,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH(1)+11),SS(1),IVD1_1,0,0,RVD1_5,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH(1)+12),SS(1),IVD1_1,0,0,RVD1_5,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH(1)+13),SS(1),IVD1_1,0,0,RVD1_6,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH(1)+14),SS(1),IVD1_1,0,0,RVD1_6,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH(1)+15),SS(1),IVD1_1,0,0,RVD1_6,0.0,0.0)
      CALL TSAT2_CFG(2, (IBRCH(1)+16), (IBRCH(1)+17), (IBRCH(1)+18), (IB&
     &RCH(1)+19), (IBRCH(1)+20), (IBRCH(1)+21),0,0,0,0,0,0,SS(1),RVD1_1,&
     &0.2,1.17,60.0,0.0,0.4,0.0,0.05,0.0,0.0,0.0,0.0,0.0,RVD1_2,RVD1_3,0&
     &.0,0.0)

! 330:[var_switch] Two State Switch 'Constant VF control'

! 350:[Filter_L_1_1_1_2]  
      CALL Filter_L_1_1_1_2Dyn_Begin(0.000621, 700.0, 700.0, 1.332)


! 360:[const] Real Constant 
      DBlk_Gr_1 = 1.0

! 370:[unity] Type/Shape conversion block 

! 380:[const] Real Constant 
      freq_1_1 = 50.0

! 390:[const] Real Constant 
      Cfreq_Gr_1 = 60.0

! 440:[mult] Multiplier 

! 450:[mult] Multiplier 

! 470:[mult] Multiplier 

! 480:[PQ_control_10_2]  
      CALL PQ_control_10_2Dyn_Begin()


! 490:[VF_Control_7_2]  
      CALL VF_Control_7_2Dyn_Begin()


! 500:[datatap] Scalar/Array Tap 

! 510:[datatap] Scalar/Array Tap 

! 520:[datatap] Scalar/Array Tap 

! 530:[datamerge] Merges data signals into an array 

! 540:[div] Divider 

! 550:[gain] Gain Block 

! 560:[gain] Gain Block 

! 580:[ConvBridge_IGBT_1]  
      CALL ConvBridge_IGBT_1Dyn_Begin()


! 590:[varrlc] Variable R, L or C  
      CALL E_VARRLC1_CFG(1 ,SS(1) ,  (IBRCH(1)+31), 0)
      CALL E_VARRLC1_CFG(1 ,SS(1) ,  (IBRCH(1)+32), 0)
      CALL E_VARRLC1_CFG(1 ,SS(1) ,  (IBRCH(1)+33), 0)

! 600:[pgb] Output Channel 'Pdq'

! 610:[varrlc] Variable R, L or C  
      CALL E_VARRLC1_CFG(0 ,SS(1) ,  (IBRCH(1)+25), 0)
      CALL E_VARRLC1_CFG(0 ,SS(1) ,  (IBRCH(1)+26), 0)
      CALL E_VARRLC1_CFG(0 ,SS(1) ,  (IBRCH(1)+27), 0)

! 620:[datatap] Scalar/Array Tap 

! 630:[datatap] Scalar/Array Tap 

! 640:[datatap] Scalar/Array Tap 

! 650:[pgb] Output Channel 'Frequency_int'

! 670:[pgb] Output Channel 'VA_Ref'

! 700:[pgb] Output Channel 'VA_Ref'

! 710:[compar] Two Input Comparator 

! 730:[select] Two Input Selector 
      RTCI(NRTCI) = 0
      NRTCI = NRTCI + 1

! 1:[source_1] Single Phase Voltage Source Model 2 'Source1_1_1'
      CALL E_1PVSRC_CFG(0,0,6,1.85,60.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0)

      RETURN
      END

!=======================================================================

      SUBROUTINE Converter_16_2Out_Begin(UN, V_HV)

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------

!     SUBR    Filter_L_1_1_1_2Out_Begin  ! 
!     SUBR    PQ_control_10_2Out_Begin  ! 
!     SUBR    VF_Control_7_2Out_Begin  ! 
!     SUBR    ConvBridge_IGBT_1Out_Begin  ! 

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments
      REAL,    INTENT(IN)  :: UN, V_HV

! Electrical Node Indices
      INTEGER  NT_7(3), NT_9(3)

! Control Signals
      REAL     RT_3, RT_4, RT_8, RT_13, RT_14
      REAL     RT_16, RT_21, Lconv_G_1, RT_22
      REAL     RT_23, freq_1_1, Cfreq_Gr_1
      REAL     DBlk_Gr_1

! Internal Variables
      INTEGER  IVD1_1

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER IT_0                                ! Storage Indices
      INTEGER ISUBS, SS(2), IBRCH(2), INODE       ! SS/Node/Branch/Xfmr
      INTEGER IXFMR


!---------------------------------------
! Local Indices 
!---------------------------------------


! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      NCX       = NCX + 0
      INODE     = NNODE + 2
      NNODE     = NNODE + 33
      IXFMR     = NXFMR
      NXFMR     = NXFMR + 3
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

! Initialize Subsystem Mapping

      ISUBS = NSUBS + 0
      NSUBS = NSUBS + 2

      DO IT_0 = 1,2
         SS(IT_0) = SUBS(ISUBS + IT_0)
      END DO

! Initialize Branch Mapping.

      IBRCH(1)     = NBRCH(SS(1))
      NBRCH(SS(1)) = NBRCH(SS(1)) + 35


      IBRCH(2)     = NBRCH(SS(2))
      NBRCH(SS(2)) = NBRCH(SS(2)) + 1

!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


! Array (1:3) quantities...
      DO IT_0 = 1,3
         NT_7(IT_0) = NODE(INODE + 13 + IT_0)
         NT_9(IT_0) = NODE(INODE + 19 + IT_0)
      END DO

!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 70:[const] Real Constant 
      RT_14 = 0.0

! 80:[const] Real Constant 
      RT_13 = 0.5

! 110:[const] Real Constant 
      RT_16 = 2.0

! 150:[emtconst] Commonly Used Constants (pi...) 
      RT_21 = TWO_PI

! 170:[const] Real Constant 'R'
      RT_23 = 0.005

! 180:[const] Real Constant 
      RT_4 = 20.0

! 210:[const] Real Constant '[H]_1'
      Lconv_G_1 = 0.000335

! 220:[const] Real Constant 'H'
      RT_22 = 4.0e-05

! 230:[emtconst] Commonly Used Constants (pi...) 
      RT_8 = TWO_PI

! 280:[multimeter] Multimeter 
      IVD1_1 = NRTCF
      NRTCF  = NRTCF + 5
      IF (ABS(2.0) .GT. 1.0E-20) THEN
        RTCF(IVD1_1) = 1.0/ABS(2.0)
      ELSE
        RTCF(IVD1_1) = 1.0
      ENDIF
      IF (ABS(0.69) .GT. 1.0E-20) THEN
        RTCF(IVD1_1+1) = 1.0/ABS(0.69)
      ELSE
        RTCF(IVD1_1+1) = 1.0
      ENDIF
      RTCF(IVD1_1+2) = 0.002
      IF (ABS(1.6735) .GT. 1.0E-20) THEN
        RTCF(IVD1_1+4) = 1.0/ABS(1.6735)
      ELSE
        RTCF(IVD1_1+4) = 1.0
      ENDIF

! 300:[const] Real Constant 
      RT_3 = 5.0

! 320:[multimeter] Multimeter 
      IVD1_1 = NRTCF
      NRTCF  = NRTCF + 5
      IF (ABS(2.0) .GT. 1.0E-20) THEN
        RTCF(IVD1_1) = 1.0/ABS(2.0)
      ELSE
        RTCF(IVD1_1) = 1.0
      ENDIF
      IF (ABS(V_HV) .GT. 1.0E-20) THEN
        RTCF(IVD1_1+1) = 1.0/ABS(V_HV)
      ELSE
        RTCF(IVD1_1+1) = 1.0
      ENDIF
      RTCF(IVD1_1+2) = 0.02
      RTCF(IVD1_1+3) = 60.0

! 340:[multimeter] Multimeter 
      IVD1_1 = NRTCF
      NRTCF  = NRTCF + 5
      IF (ABS(100.0) .GT. 1.0E-20) THEN
        RTCF(IVD1_1) = 1.0/ABS(100.0)
      ELSE
        RTCF(IVD1_1) = 1.0
      ENDIF
      IF (ABS(V_HV) .GT. 1.0E-20) THEN
        RTCF(IVD1_1+1) = 1.0/ABS(V_HV)
      ELSE
        RTCF(IVD1_1+1) = 1.0
      ENDIF
      RTCF(IVD1_1+2) = 0.02

! 350:[Filter_L_1_1_1_2]  
      CALL Filter_L_1_1_1_2Out_Begin(0.000621, 700.0, 700.0, 1.332)


! 360:[const] Real Constant 
      DBlk_Gr_1 = 1.0

! 380:[const] Real Constant 
      freq_1_1 = 50.0

! 390:[const] Real Constant 
      Cfreq_Gr_1 = 60.0

! 400:[realpole] Real Pole 

! 410:[datatap] Scalar/Array Tap 

! 420:[datatap] Scalar/Array Tap 

! 430:[datatap] Scalar/Array Tap 

! 460:[tvekta] Phase-Locked Loop 
      CALL TVEKA1_CFG(1.0,60.0)

! 480:[PQ_control_10_2]  
      CALL PQ_control_10_2Out_Begin()


! 490:[VF_Control_7_2]  
      CALL VF_Control_7_2Out_Begin()


! 570:[realpole] Real Pole 

! 580:[ConvBridge_IGBT_1]  
      CALL ConvBridge_IGBT_1Out_Begin()


! 660:[pgb] Output Channel 'Pmeas'

! 680:[pgb] Output Channel 'Qmeas'

! 690:[pgb] Output Channel 'Igrid'

! 720:[pgb] Output Channel 'Irms'

! 740:[pgb] Output Channel 'I_inverter'

! 750:[pgb] Output Channel 'Fmeas'

! 760:[pgb] Output Channel 'Vgrid'

! 770:[pgb] Output Channel 'V_rms'

      RETURN
      END

