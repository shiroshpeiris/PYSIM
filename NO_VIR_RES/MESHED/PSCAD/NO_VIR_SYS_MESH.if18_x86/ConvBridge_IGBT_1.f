!=======================================================================
! Generated by: PSCAD v5.0.1.0
! Warning:  The content of this file is automatically generated.
!           Do not modify, as any changes made here will be lost!
!-----------------------------------------------------------------------
! Component     : ConvBridge_IGBT_1
! Description   : 
!-----------------------------------------------------------------------


!=======================================================================

      SUBROUTINE ConvBridge_IGBT_1Dyn(Ref)

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------

!     SUBR    PWM_1Dyn      ! 

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments
      REAL,    INTENT(IN)  :: Ref(6)

! Electrical Node Indices

! Control Signals
      REAL     RT_1(4), RT_2(12), gt6(2), gt1(2)
      REAL     gt2(2), gt3(2), gt4(2), gt5(2)
      REAL     Cfreq, freq, Igto1, Vgto1

! Internal Variables

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOF, IT_0                         ! Storage Indices
      INTEGER ISUBS, SS(1), IBRCH(1), INODE       ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      TXFR(NTXFR,1) = NSTOL
      TXFR(NTXFR,2) = NSTOI
      TXFR(NTXFR,3) = NSTOF
      TXFR(NTXFR,4) = NSTOC

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      ISTOF     = NSTOF
      NSTOF     = NSTOF + 38
      INODE     = NNODE + 2
      NNODE     = NNODE + 7
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

! Initialize Subsystem Mapping

      ISUBS = NSUBS + 0
      NSUBS = NSUBS + 1

      DO IT_0 = 1,1
         SS(IT_0) = SUBS(ISUBS + IT_0)
      END DO

! Initialize Branch Mapping.

      IBRCH(1)     = NBRCH(SS(1))
      NBRCH(SS(1)) = NBRCH(SS(1)) + 12

!---------------------------------------
! Transfers from storage arrays 
!---------------------------------------

      Cfreq    = STOF(ISTOF + 35)
      freq     = STOF(ISTOF + 36)
      Igto1    = STOF(ISTOF + 37)
      Vgto1    = STOF(ISTOF + 38)

! Array (1:2) quantities...
      DO IT_0 = 1,2
         gt6(IT_0) = STOF(ISTOF + 22 + IT_0)
         gt1(IT_0) = STOF(ISTOF + 24 + IT_0)
         gt2(IT_0) = STOF(ISTOF + 26 + IT_0)
         gt3(IT_0) = STOF(ISTOF + 28 + IT_0)
         gt4(IT_0) = STOF(ISTOF + 30 + IT_0)
         gt5(IT_0) = STOF(ISTOF + 32 + IT_0)
      END DO

! Array (1:4) quantities...
      DO IT_0 = 1,4
         RT_1(IT_0) = STOF(ISTOF + 6 + IT_0)
      END DO

! Array (1:12) quantities...
      DO IT_0 = 1,12
         RT_2(IT_0) = STOF(ISTOF + 10 + IT_0)
      END DO


!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Configuration of Models 
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'ConvBridge_IGBT_1.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSD:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 20:[datatap] Scalar/Array Tap 
      RT_1 = Ref(1 : 4)

! 30:[datatap] Scalar/Array Tap 
      Cfreq = Ref(5)

! 40:[datatap] Scalar/Array Tap 
      freq = Ref(6)

! 50:[PWM_1]  
      CALL PWM_1Dyn(RT_1, RT_2, freq, Cfreq)


! 60:[datatap] Scalar/Array Tap 
      gt6 = RT_2(11 : 12)

! 70:[datatap] Scalar/Array Tap 
      gt5 = RT_2(9 : 10)

! 80:[datatap] Scalar/Array Tap 
      gt4 = RT_2(7 : 8)

! 90:[datatap] Scalar/Array Tap 
      gt3 = RT_2(5 : 6)

! 100:[datatap] Scalar/Array Tap 
      gt2 = RT_2(3 : 4)

! 110:[peswitch] Power electronic switch 
! Power Electronic Switch Model: IGBT
      CALL COMPONENT_ID(ICALL_NO,1081402469)
      CALL PESWITCH1_EXE(SS(1), (IBRCH(1)+4), NINT(gt2(1)), gt2(2))

! 120:[peswitch] Power electronic switch 
! Power Electronic Switch Model: IGBT
      CALL COMPONENT_ID(ICALL_NO,158496146)
      CALL PESWITCH1_EXE(SS(1), (IBRCH(1)+5), NINT(gt6(1)), gt6(2))

! 130:[datatap] Scalar/Array Tap 
      gt1 = RT_2(1 : 2)

! 140:[peswitch] Power electronic switch 
! Power Electronic Switch Model: IGBT
      CALL COMPONENT_ID(ICALL_NO,1859201354)
      CALL PESWITCH1_EXE(SS(1), (IBRCH(1)+6), NINT(gt4(1)), gt4(2))

! 150:[peswitch] Power electronic switch 
! Power Electronic Switch Model: IGBT
      CALL COMPONENT_ID(ICALL_NO,1958583956)
      CALL PESWITCH1_EXE(SS(1), (IBRCH(1)+3), NINT(gt5(1)), gt5(2))

! 160:[peswitch] Power electronic switch 
! Power Electronic Switch Model: IGBT
      CALL COMPONENT_ID(ICALL_NO,563351026)
      CALL PESWITCH1_EXE(SS(1), (IBRCH(1)+2), NINT(gt3(1)), gt3(2))

! 170:[peswitch] Power electronic switch 
! Power Electronic Switch Model: IGBT
      CALL COMPONENT_ID(ICALL_NO,161185155)
      CALL PESWITCH1_EXE(SS(1), (IBRCH(1)+1), NINT(gt1(1)), gt1(2))

! 1:[peswitch] Power electronic switch 
! Power Electronic Switch Model: Diode
      CALL COMPONENT_ID(ICALL_NO,652311050)
      CALL PESWITCH1_EXE(SS(1), (IBRCH(1)+7), 1, 0.0)

! 1:[peswitch] Power electronic switch 
! Power Electronic Switch Model: Diode
      CALL COMPONENT_ID(ICALL_NO,1645950866)
      CALL PESWITCH1_EXE(SS(1), (IBRCH(1)+8), 1, 0.0)

! 1:[peswitch] Power electronic switch 
! Power Electronic Switch Model: Diode
      CALL COMPONENT_ID(ICALL_NO,1080279489)
      CALL PESWITCH1_EXE(SS(1), (IBRCH(1)+9), 1, 0.0)

! 1:[peswitch] Power electronic switch 
! Power Electronic Switch Model: Diode
      CALL COMPONENT_ID(ICALL_NO,1967508451)
      CALL PESWITCH1_EXE(SS(1), (IBRCH(1)+12), 1, 0.0)

! 1:[peswitch] Power electronic switch 
! Power Electronic Switch Model: Diode
      CALL COMPONENT_ID(ICALL_NO,1326445067)
      CALL PESWITCH1_EXE(SS(1), (IBRCH(1)+11), 1, 0.0)

! 1:[peswitch] Power electronic switch 
! Power Electronic Switch Model: Diode
      CALL COMPONENT_ID(ICALL_NO,970555229)
      CALL PESWITCH1_EXE(SS(1), (IBRCH(1)+10), 1, 0.0)

!---------------------------------------
! Feedbacks and transfers to storage 
!---------------------------------------

      STOF(ISTOF + 35) = Cfreq
      STOF(ISTOF + 36) = freq
      STOF(ISTOF + 37) = Igto1
      STOF(ISTOF + 38) = Vgto1

! Array (1:2) quantities...
      DO IT_0 = 1,2
         STOF(ISTOF + 22 + IT_0) = gt6(IT_0)
         STOF(ISTOF + 24 + IT_0) = gt1(IT_0)
         STOF(ISTOF + 26 + IT_0) = gt2(IT_0)
         STOF(ISTOF + 28 + IT_0) = gt3(IT_0)
         STOF(ISTOF + 30 + IT_0) = gt4(IT_0)
         STOF(ISTOF + 32 + IT_0) = gt5(IT_0)
      END DO

! Array (1:4) quantities...
      DO IT_0 = 1,4
         STOF(ISTOF + 6 + IT_0) = RT_1(IT_0)
      END DO

! Array (1:6) quantities...
      DO IT_0 = 1,6
         STOF(ISTOF + 0 + IT_0) = Ref(IT_0)
      END DO

! Array (1:12) quantities...
      DO IT_0 = 1,12
         STOF(ISTOF + 10 + IT_0) = RT_2(IT_0)
      END DO


!---------------------------------------
! Transfer to Exports
!---------------------------------------

!---------------------------------------
! Close Model Data read 
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE ConvBridge_IGBT_1Out()

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------

!     SUBR    PWM_1Out      ! 
      REAL    VBRANCH       ! Voltage across the branch

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Electrical Node Indices

! Control Signals
      REAL     Igto1, Vgto1

! Internal Variables

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOL, ISTOI, ISTOF, ISTOC, IT_0    ! Storage Indices
      INTEGER ISUBS, SS(1), IBRCH(1), INODE       ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      ISTOL = TXFR(NTXFR,1)
      ISTOI = TXFR(NTXFR,2)
      ISTOF = TXFR(NTXFR,3)
      ISTOC = TXFR(NTXFR,4)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      INODE     = NNODE + 2
      NNODE     = NNODE + 7
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

! Initialize Subsystem Mapping

      ISUBS = NSUBS + 0
      NSUBS = NSUBS + 1

      DO IT_0 = 1,1
         SS(IT_0) = SUBS(ISUBS + IT_0)
      END DO

! Initialize Branch Mapping.

      IBRCH(1)     = NBRCH(SS(1))
      NBRCH(SS(1)) = NBRCH(SS(1)) + 12

!---------------------------------------
! Transfers from storage arrays 
!---------------------------------------

      Igto1    = STOF(ISTOF + 37)
      Vgto1    = STOF(ISTOF + 38)


!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Configuration of Models 
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'ConvBridge_IGBT_1.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSO:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 50:[PWM_1]  
      CALL PWM_1Out()


! 170:[peswitch] Power electronic switch 
      Igto1 = ( CBR((IBRCH(1)+1), SS(1)))
      Vgto1 = VBRANCH(SS(1), (IBRCH(1)+1))

!---------------------------------------
! Feedbacks and transfers to storage 
!---------------------------------------

      STOF(ISTOF + 37) = Igto1
      STOF(ISTOF + 38) = Vgto1


!---------------------------------------
! Close Model Data read 
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE ConvBridge_IGBT_1Dyn_Begin()

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------

!     SUBR    PWM_1Dyn_Begin  ! 

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments

! Electrical Node Indices

! Control Signals

! Internal Variables

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER IT_0                                ! Storage Indices
      INTEGER ISUBS, SS(1), IBRCH(1), INODE       ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------


! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      INODE     = NNODE + 2
      NNODE     = NNODE + 7
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

! Initialize Subsystem Mapping

      ISUBS = NSUBS + 0
      NSUBS = NSUBS + 1

      DO IT_0 = 1,1
         SS(IT_0) = SUBS(ISUBS + IT_0)
      END DO

! Initialize Branch Mapping.

      IBRCH(1)     = NBRCH(SS(1))
      NBRCH(SS(1)) = NBRCH(SS(1)) + 12

!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 20:[datatap] Scalar/Array Tap 

! 30:[datatap] Scalar/Array Tap 

! 40:[datatap] Scalar/Array Tap 

! 50:[PWM_1]  
      CALL PWM_1Dyn_Begin()


! 60:[datatap] Scalar/Array Tap 

! 70:[datatap] Scalar/Array Tap 

! 80:[datatap] Scalar/Array Tap 

! 90:[datatap] Scalar/Array Tap 

! 100:[datatap] Scalar/Array Tap 

! 110:[peswitch] Power electronic switch 
      CALL PESWITCH1_CFG(3, 0,0.0005, 100000000.0, 100000.0, 100000.0, 0&
     &.0, 0.0)

! 120:[peswitch] Power electronic switch 
      CALL PESWITCH1_CFG(3, 0,0.0005, 100000000.0, 100000.0, 100000.0, 0&
     &.0, 0.0)

! 130:[datatap] Scalar/Array Tap 

! 140:[peswitch] Power electronic switch 
      CALL PESWITCH1_CFG(3, 0,0.0005, 100000000.0, 100000.0, 100000.0, 0&
     &.0, 0.0)

! 150:[peswitch] Power electronic switch 
      CALL PESWITCH1_CFG(3, 0,0.0005, 100000000.0, 100000.0, 100000.0, 0&
     &.0, 0.0)

! 160:[peswitch] Power electronic switch 
      CALL PESWITCH1_CFG(3, 0,0.0005, 100000000.0, 100000.0, 100000.0, 0&
     &.0, 0.0)

! 170:[peswitch] Power electronic switch 
      CALL PESWITCH1_CFG(3, 0,0.0005, 100000000.0, 100000.0, 100000.0, 0&
     &.0, 0.0)

! 1:[peswitch] Power electronic switch 
      CALL PESWITCH1_CFG(0, 0,0.0005, 100000000.0, 100000.0, 100000.0, 0&
     &.0, 0.0)

! 1:[peswitch] Power electronic switch 
      CALL PESWITCH1_CFG(0, 0,0.0005, 100000000.0, 100000.0, 100000.0, 0&
     &.0, 0.0)

! 1:[peswitch] Power electronic switch 
      CALL PESWITCH1_CFG(0, 0,0.0005, 100000000.0, 100000.0, 100000.0, 0&
     &.0, 0.0)

! 1:[peswitch] Power electronic switch 
      CALL PESWITCH1_CFG(0, 0,0.0005, 100000000.0, 100000.0, 100000.0, 0&
     &.0, 0.0)

! 1:[peswitch] Power electronic switch 
      CALL PESWITCH1_CFG(0, 0,0.0005, 100000000.0, 100000.0, 100000.0, 0&
     &.0, 0.0)

! 1:[peswitch] Power electronic switch 
      CALL PESWITCH1_CFG(0, 0,0.0005, 100000000.0, 100000.0, 100000.0, 0&
     &.0, 0.0)

      RETURN
      END

!=======================================================================

      SUBROUTINE ConvBridge_IGBT_1Out_Begin()

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------

!     SUBR    PWM_1Out_Begin  ! 

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments

! Electrical Node Indices

! Control Signals

! Internal Variables

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER IT_0                                ! Storage Indices
      INTEGER ISUBS, SS(1), IBRCH(1), INODE       ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------


! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      INODE     = NNODE + 2
      NNODE     = NNODE + 7
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

! Initialize Subsystem Mapping

      ISUBS = NSUBS + 0
      NSUBS = NSUBS + 1

      DO IT_0 = 1,1
         SS(IT_0) = SUBS(ISUBS + IT_0)
      END DO

! Initialize Branch Mapping.

      IBRCH(1)     = NBRCH(SS(1))
      NBRCH(SS(1)) = NBRCH(SS(1)) + 12

!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 50:[PWM_1]  
      CALL PWM_1Out_Begin()


      RETURN
      END

