!=======================================================================
! Generated by: PSCAD v5.0.0.0
! Warning:  The content of this file is automatically generated.
!           Do not modify, as any changes made here will be lost!
!-----------------------------------------------------------------------
! Component     : PI_Section
! Description   : 
!-----------------------------------------------------------------------


!=======================================================================

      SUBROUTINE PI_SectionDyn(Rtx_m, Ltx_m, Ctx_m, Wbase, Zbase,       &
     &   Length)

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------

      REAL    EMTDC_XINT    ! 'Integrator /w Interpolation'
!     SUBR    TRDQO         ! DQ0 transformation

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments
      REAL,    INTENT(IN)  :: Rtx_m, Ltx_m, Ctx_m
      REAL,    INTENT(IN)  :: Wbase, Zbase
      REAL,    INTENT(IN)  :: Length

! Electrical Node Indices

! Control Signals
      REAL     RT_1, RT_2, Ctx_half, RT_3, RT_4
      REAL     RT_5, Ltx, Rtx, RT_6, RT_7, RT_8
      REAL     Theta, RT_9, RT_10(3), Vpi_inst(3)
      REAL     Vbase, RT_11, RT_12, RT_13, RT_14
      REAL     RT_15, RT_16, Vq, Vd, RT_17, RT_18
      REAL     RT_19, RT_20, RT_21, RT_22(3)
      REAL     Ipi_inst(3), Ibase, RT_23, RT_24
      REAL     RT_25, RT_26, Iq, Id, PPI23

! Internal Variables
      REAL     RVD1_1, RVD2_1(2), RVD2_2(2)

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOF, IT_0                         ! Storage Indices
      INTEGER IPGB                                ! Control/Monitoring
      INTEGER ISUBS, SS(1), IBRCH(1), INODE       ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      TXFR(NTXFR,1) = NSTOL
      TXFR(NTXFR,2) = NSTOI
      TXFR(NTXFR,3) = NSTOF
      TXFR(NTXFR,4) = NSTOC

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      ISTOF     = NSTOF
      NSTOF     = NSTOF + 53
      IPGB      = NPGB
      NPGB      = NPGB + 10
      INODE     = NNODE + 2
      NNODE     = NNODE + 14
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

! Initialize Subsystem Mapping

      ISUBS = NSUBS + 0
      NSUBS = NSUBS + 1

      DO IT_0 = 1,1
         SS(IT_0) = SUBS(ISUBS + IT_0)
      END DO

! Initialize Branch Mapping.

      IBRCH(1)     = NBRCH(SS(1))
      NBRCH(SS(1)) = NBRCH(SS(1)) + 9

!---------------------------------------
! Transfers from storage arrays 
!---------------------------------------

      RT_1     = STOF(ISTOF + 7)
      RT_2     = STOF(ISTOF + 8)
      Ctx_half = STOF(ISTOF + 9)
      RT_3     = STOF(ISTOF + 10)
      RT_4     = STOF(ISTOF + 11)
      RT_5     = STOF(ISTOF + 12)
      Ltx      = STOF(ISTOF + 13)
      Rtx      = STOF(ISTOF + 14)
      RT_6     = STOF(ISTOF + 15)
      RT_7     = STOF(ISTOF + 16)
      RT_8     = STOF(ISTOF + 17)
      Theta    = STOF(ISTOF + 18)
      RT_9     = STOF(ISTOF + 19)
      Vbase    = STOF(ISTOF + 26)
      RT_11    = STOF(ISTOF + 27)
      RT_12    = STOF(ISTOF + 28)
      RT_13    = STOF(ISTOF + 29)
      RT_14    = STOF(ISTOF + 30)
      RT_15    = STOF(ISTOF + 31)
      RT_16    = STOF(ISTOF + 32)
      Vq       = STOF(ISTOF + 33)
      Vd       = STOF(ISTOF + 34)
      RT_17    = STOF(ISTOF + 35)
      RT_18    = STOF(ISTOF + 36)
      RT_19    = STOF(ISTOF + 37)
      RT_20    = STOF(ISTOF + 38)
      RT_21    = STOF(ISTOF + 39)
      Ibase    = STOF(ISTOF + 46)
      RT_23    = STOF(ISTOF + 47)
      RT_24    = STOF(ISTOF + 48)
      RT_25    = STOF(ISTOF + 49)
      RT_26    = STOF(ISTOF + 50)
      Iq       = STOF(ISTOF + 51)
      Id       = STOF(ISTOF + 52)
      PPI23    = STOF(ISTOF + 53)

! Array (1:3) quantities...
      DO IT_0 = 1,3
         RT_10(IT_0) = STOF(ISTOF + 19 + IT_0)
         Vpi_inst(IT_0) = STOF(ISTOF + 22 + IT_0)
         RT_22(IT_0) = STOF(ISTOF + 39 + IT_0)
         Ipi_inst(IT_0) = STOF(ISTOF + 42 + IT_0)
      END DO


!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Configuration of Models 
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'PI_Section.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSD:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 150:[const] Real Constant 
      RT_9 = 60.0

! 160:[emtconst] Commonly Used Constants (pi...) 
      RT_17 = TWO_PI

! 170:[const] Real Constant 
      RT_15 = 1.6375

! 180:[const] Real Constant 
      RT_21 = 34.5

! 190:[emtconst] Commonly Used Constants (pi...) 
      RT_16 = SQRT_2

! 200:[emtconst] Commonly Used Constants (pi...) 
      RT_20 = SQRT_3

! 210:[emtconst] Commonly Used Constants (pi...) 
      RT_19 = SQRT_2

! 220:[mult] Multiplier 
      RT_7 = Ctx_m * Length

! 230:[div] Divider 
      IF (ABS(Zbase) .LT. 1.0E-100) THEN
         IF (Zbase .LT. 0.0)  THEN
            RT_5 = -1.0E100 * RT_7
         ELSE
            RT_5 =  1.0E100 * RT_7
         ENDIF
      ELSE
         RT_5 = RT_7 / Zbase
      ENDIF

! 240:[div] Divider 
      IF (ABS(Wbase) .LT. 1.0E-100) THEN
         IF (Wbase .LT. 0.0)  THEN
            RT_2 = -1.0E100 * RT_5
         ELSE
            RT_2 =  1.0E100 * RT_5
         ENDIF
      ELSE
         RT_2 = RT_5 / Wbase
      ENDIF

! 250:[gain] Gain Block 
!  Gain
      RT_1 = 0.5 * RT_2

! 260:[mult] Multiplier 
      RT_6 = Rtx_m * Length

! 270:[mult] Multiplier 
      RT_4 = Ltx_m * Length

! 280:[mult] Multiplier 
      RT_3 = RT_4 * Zbase

! 290:[mult] Multiplier 
      RT_8 = RT_9 * RT_17

! 300:[integral] Interpolated Integrator 
      RVD1_1 = RTCF(NRTCF) ! Initial Output
      NRTCF = NRTCF + 1
      RVD2_1(1) = RT_8
      RVD2_1(2) = 0.0
      RVD2_2(1) = 0.0
      RVD2_2(2) = 0.0
      Theta = EMTDC_XINT(0, 0, 0, RVD1_1, 1.0, 0.0, -1.0e+20, 1.0e+20, R&
     &VD2_2, RVD2_1)

! 310:[mult] Multiplier 
      Ibase = RT_15 * RT_16

! 320:[div] Divider 
      IF (ABS(RT_20) .LT. 1.0E-100) THEN
         IF (RT_20 .LT. 0.0)  THEN
            RT_18 = -1.0E100 * RT_21
         ELSE
            RT_18 =  1.0E100 * RT_21
         ENDIF
      ELSE
         RT_18 = RT_21 / RT_20
      ENDIF

! 330:[mult] Multiplier 
      Vbase = RT_18 * RT_19

! 340:[div] Divider 
      IF (ABS(Ibase) .LT. 1.0E-100) THEN
         IF (Ibase .LT. 0.0)  THEN
            RT_22 = -1.0E100 * Ipi_inst
         ELSE
            RT_22 =  1.0E100 * Ipi_inst
         ENDIF
      ELSE
         RT_22 = Ipi_inst / Ibase
      ENDIF

! 350:[datatap] Scalar/Array Tap 
      RT_23 = RT_22(1)

! 360:[datatap] Scalar/Array Tap 
      RT_24 = RT_22(2)

! 370:[div] Divider 
      IF (ABS(Vbase) .LT. 1.0E-100) THEN
         IF (Vbase .LT. 0.0)  THEN
            RT_10 = -1.0E100 * Vpi_inst
         ELSE
            RT_10 =  1.0E100 * Vpi_inst
         ENDIF
      ELSE
         RT_10 = Vpi_inst / Vbase
      ENDIF

! 380:[datatap] Scalar/Array Tap 
      RT_11 = RT_10(1)

! 390:[datatap] Scalar/Array Tap 
      RT_12 = RT_10(2)

! 400:[datatap] Scalar/Array Tap 
      RT_13 = RT_10(3)

! 410:[abcdq0] abc dq0 transformation 
!ABC to DQ0 transformation
      CALL TRDQO(RT_11,RT_12,RT_13,Vd,Vq,RT_14,Theta,1)

! 420:[datatap] Scalar/Array Tap 
      RT_25 = RT_22(3)

! 430:[abcdq0] abc dq0 transformation 
!ABC to DQ0 transformation
      CALL TRDQO(RT_23,RT_24,RT_25,Id,Iq,RT_26,Theta,1)

! 440:[pgb] Output Channel 'Vq'

      PGB(IPGB+7) = Vq

! 450:[pgb] Output Channel 'Vd'

      PGB(IPGB+8) = Vd

! 460:[pgb] Output Channel 'Iq'

      PGB(IPGB+9) = Iq

! 470:[pgb] Output Channel 'Id'

      PGB(IPGB+10) = Id

! 480:[div] Divider 
      IF (ABS(Wbase) .LT. 1.0E-100) THEN
         IF (Wbase .LT. 0.0)  THEN
            Ltx = -1.0E100 * RT_3
         ELSE
            Ltx =  1.0E100 * RT_3
         ENDIF
      ELSE
         Ltx = RT_3 / Wbase
      ENDIF

! 490:[mult] Multiplier 
      Rtx = RT_6 * Zbase

! 500:[gain] Gain Block 
!  Gain
      Ctx_half = 1000000.0 * RT_1

! 510:[varrlc] Variable R, L or C  
      CALL COMPONENT_ID(ICALL_NO,1146207998)
      CALL E_VARRLC1_EXE(1 ,SS(1) ,  (IBRCH(1)+1), 0, Ltx, 0.0)
      CALL E_VARRLC1_EXE(1 ,SS(1) ,  (IBRCH(1)+2), 0, Ltx, 0.0)
      CALL E_VARRLC1_EXE(1 ,SS(1) ,  (IBRCH(1)+3), 0, Ltx, 0.0)

! 520:[varrlc] Variable R, L or C  
      CALL COMPONENT_ID(ICALL_NO,758898118)
      CALL E_VARRLC1_EXE(0 ,SS(1) ,  (IBRCH(1)+4), 0, Rtx, 0.0)
      CALL E_VARRLC1_EXE(0 ,SS(1) ,  (IBRCH(1)+5), 0, Rtx, 0.0)
      CALL E_VARRLC1_EXE(0 ,SS(1) ,  (IBRCH(1)+6), 0, Rtx, 0.0)

!---------------------------------------
! Feedbacks and transfers to storage 
!---------------------------------------

      STOF(ISTOF + 1) = Rtx_m
      STOF(ISTOF + 2) = Ltx_m
      STOF(ISTOF + 3) = Ctx_m
      STOF(ISTOF + 4) = Wbase
      STOF(ISTOF + 5) = Zbase
      STOF(ISTOF + 6) = Length
      STOF(ISTOF + 7) = RT_1
      STOF(ISTOF + 8) = RT_2
      STOF(ISTOF + 9) = Ctx_half
      STOF(ISTOF + 10) = RT_3
      STOF(ISTOF + 11) = RT_4
      STOF(ISTOF + 12) = RT_5
      STOF(ISTOF + 13) = Ltx
      STOF(ISTOF + 14) = Rtx
      STOF(ISTOF + 15) = RT_6
      STOF(ISTOF + 16) = RT_7
      STOF(ISTOF + 17) = RT_8
      STOF(ISTOF + 18) = Theta
      STOF(ISTOF + 19) = RT_9
      STOF(ISTOF + 26) = Vbase
      STOF(ISTOF + 27) = RT_11
      STOF(ISTOF + 28) = RT_12
      STOF(ISTOF + 29) = RT_13
      STOF(ISTOF + 30) = RT_14
      STOF(ISTOF + 31) = RT_15
      STOF(ISTOF + 32) = RT_16
      STOF(ISTOF + 33) = Vq
      STOF(ISTOF + 34) = Vd
      STOF(ISTOF + 35) = RT_17
      STOF(ISTOF + 36) = RT_18
      STOF(ISTOF + 37) = RT_19
      STOF(ISTOF + 38) = RT_20
      STOF(ISTOF + 39) = RT_21
      STOF(ISTOF + 46) = Ibase
      STOF(ISTOF + 47) = RT_23
      STOF(ISTOF + 48) = RT_24
      STOF(ISTOF + 49) = RT_25
      STOF(ISTOF + 50) = RT_26
      STOF(ISTOF + 51) = Iq
      STOF(ISTOF + 52) = Id
      STOF(ISTOF + 53) = PPI23

! Array (1:3) quantities...
      DO IT_0 = 1,3
         STOF(ISTOF + 19 + IT_0) = RT_10(IT_0)
         STOF(ISTOF + 22 + IT_0) = Vpi_inst(IT_0)
         STOF(ISTOF + 39 + IT_0) = RT_22(IT_0)
         STOF(ISTOF + 42 + IT_0) = Ipi_inst(IT_0)
      END DO


!---------------------------------------
! Transfer to Exports
!---------------------------------------

!---------------------------------------
! Close Model Data read 
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE PI_SectionOut()

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------

      REAL    EMTDC_VVDC    ! 
      REAL    P3PH3         ! 
      REAL    Q3PH3         ! 
      REAL    VM3PH2        ! '3 Phase RMS Voltage Measurement'
      REAL    RMS3PH        ! '3 Phase RMS Measurement'
      REAL    REALPOLE      ! 

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Electrical Node Indices
      INTEGER  NT_2(3)

! Control Signals
      REAL     RT_9, Vpi_inst(3), RT_15, RT_16
      REAL     RT_17, RT_19, RT_20, RT_21
      REAL     Ipi_inst(3), PPI23

! Internal Variables
      INTEGER  IVD1_1
      REAL     RVD1_1

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOL, ISTOI, ISTOF, ISTOC, IT_0    ! Storage Indices
      INTEGER IPGB                                ! Control/Monitoring
      INTEGER ISUBS, SS(1), IBRCH(1), INODE       ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      ISTOL = TXFR(NTXFR,1)
      ISTOI = TXFR(NTXFR,2)
      ISTOF = TXFR(NTXFR,3)
      ISTOC = TXFR(NTXFR,4)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      IPGB      = NPGB
      NPGB      = NPGB + 10
      INODE     = NNODE + 2
      NNODE     = NNODE + 14
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

! Initialize Subsystem Mapping

      ISUBS = NSUBS + 0
      NSUBS = NSUBS + 1

      DO IT_0 = 1,1
         SS(IT_0) = SUBS(ISUBS + IT_0)
      END DO

! Initialize Branch Mapping.

      IBRCH(1)     = NBRCH(SS(1))
      NBRCH(SS(1)) = NBRCH(SS(1)) + 9

!---------------------------------------
! Transfers from storage arrays 
!---------------------------------------

      RT_9     = STOF(ISTOF + 19)
      RT_15    = STOF(ISTOF + 31)
      RT_16    = STOF(ISTOF + 32)
      RT_17    = STOF(ISTOF + 35)
      RT_19    = STOF(ISTOF + 37)
      RT_20    = STOF(ISTOF + 38)
      RT_21    = STOF(ISTOF + 39)
      PPI23    = STOF(ISTOF + 53)

! Array (1:3) quantities...
      DO IT_0 = 1,3
         Vpi_inst(IT_0) = STOF(ISTOF + 22 + IT_0)
         Ipi_inst(IT_0) = STOF(ISTOF + 42 + IT_0)
      END DO


!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


! Array (1:3) quantities...
      DO IT_0 = 1,3
         NT_2(IT_0) = NODE(INODE + 9 + IT_0)
      END DO

!---------------------------------------
! Configuration of Models 
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'PI_Section.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSO:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 10:[multimeter] Multimeter 
      IVD1_1 = NRTCF
      NRTCF  = NRTCF + 5
      Vpi_inst(1) = EMTDC_VVDC(SS(1), NT_2(1), 0)
      Vpi_inst(2) = EMTDC_VVDC(SS(1), NT_2(2), 0)
      Vpi_inst(3) = EMTDC_VVDC(SS(1), NT_2(3), 0)
      Ipi_inst(1) = EMTDC_VVDC(SS(1), NT_2(1), NT_2(2))
      Ipi_inst(2) = EMTDC_VVDC(SS(1), NT_2(2), NT_2(3))
      Ipi_inst(3) = EMTDC_VVDC(SS(1), NT_2(3), NT_2(1))
      RVD1_1 = RTCF(IVD1_1) * P3PH3(SS(1), (IBRCH(1)+7), (IBRCH(1)+8), (&
     &IBRCH(1)+9),RTCF(IVD1_1+2),0)
      IF (UPDATE_AG) CALL PSCAD_AGR2(ICALL_NO,731546729,RVD1_1,"Pd")
      PPI23 = RVD1_1
      RVD1_1 = RTCF(IVD1_1) * Q3PH3(SS(1), (IBRCH(1)+7), (IBRCH(1)+8), (&
     &IBRCH(1)+9),RTCF(IVD1_1+2),0)
      IF (UPDATE_AG) CALL PSCAD_AGR2(ICALL_NO,731546729,RVD1_1,"Qd")
      RVD1_1 = RTCF(IVD1_1+1) * VM3PH2(SS(1), NT_2(1), NT_2(2), NT_2(3),&
     & RTCF(IVD1_1+2))
      IF (UPDATE_AG) CALL PSCAD_AGR2(ICALL_NO,731546729,RVD1_1,"Vd")
      RVD1_1 = RMS3PH(( CBR((IBRCH(1)+7), SS(1))),( CBR((IBRCH(1)+8), SS&
     &(1))),( CBR((IBRCH(1)+9), SS(1))))
      RVD1_1 = REALPOLE(0,1,0,RTCF(IVD1_1+4),RTCF(IVD1_1+2),RVD1_1,0.0,0&
     &.0,RTCF(IVD1_1+2))
      IF (FIRSTSTEP) THEN
        CALL PSCAD_AGI2(ICALL_NO,731546729,1,"hide1")
        CALL PSCAD_AGI2(ICALL_NO,731546729,1,"hide2")
      ENDIF

! 20:[pgb] Output Channel 'Vpi_inst'

      DO IVD1_1 = 1, 3
         PGB(IPGB+1+IVD1_1-1) = Vpi_inst(IVD1_1)
      ENDDO

! 50:[pgb] Output Channel 'Ipi_inst'

      DO IVD1_1 = 1, 3
         PGB(IPGB+4+IVD1_1-1) = Ipi_inst(IVD1_1)
      ENDDO

! 150:[const] Real Constant 

      RT_9 = 60.0

! 160:[emtconst] Commonly Used Constants (pi...) 
      RT_17 = TWO_PI

! 170:[const] Real Constant 

      RT_15 = 1.6375

! 180:[const] Real Constant 

      RT_21 = 34.5

! 190:[emtconst] Commonly Used Constants (pi...) 
      RT_16 = SQRT_2

! 200:[emtconst] Commonly Used Constants (pi...) 
      RT_20 = SQRT_3

! 210:[emtconst] Commonly Used Constants (pi...) 
      RT_19 = SQRT_2

!---------------------------------------
! Feedbacks and transfers to storage 
!---------------------------------------

      STOF(ISTOF + 19) = RT_9
      STOF(ISTOF + 31) = RT_15
      STOF(ISTOF + 32) = RT_16
      STOF(ISTOF + 35) = RT_17
      STOF(ISTOF + 37) = RT_19
      STOF(ISTOF + 38) = RT_20
      STOF(ISTOF + 39) = RT_21
      STOF(ISTOF + 53) = PPI23

! Array (1:3) quantities...
      DO IT_0 = 1,3
         STOF(ISTOF + 22 + IT_0) = Vpi_inst(IT_0)
         STOF(ISTOF + 42 + IT_0) = Ipi_inst(IT_0)
      END DO


!---------------------------------------
! Close Model Data read 
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE PI_SectionDyn_Begin()

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------


!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments

! Electrical Node Indices

! Control Signals
      REAL     RT_9, RT_15, RT_16, RT_17, RT_19
      REAL     RT_20, RT_21

! Internal Variables

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER IT_0                                ! Storage Indices
      INTEGER ISUBS, SS(1), IBRCH(1), INODE       ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------


! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      INODE     = NNODE + 2
      NNODE     = NNODE + 14
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

! Initialize Subsystem Mapping

      ISUBS = NSUBS + 0
      NSUBS = NSUBS + 1

      DO IT_0 = 1,1
         SS(IT_0) = SUBS(ISUBS + IT_0)
      END DO

! Initialize Branch Mapping.

      IBRCH(1)     = NBRCH(SS(1))
      NBRCH(SS(1)) = NBRCH(SS(1)) + 9

!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 150:[const] Real Constant 
      RT_9 = 60.0

! 160:[emtconst] Commonly Used Constants (pi...) 
      RT_17 = TWO_PI

! 170:[const] Real Constant 
      RT_15 = 1.6375

! 180:[const] Real Constant 
      RT_21 = 34.5

! 190:[emtconst] Commonly Used Constants (pi...) 
      RT_16 = SQRT_2

! 200:[emtconst] Commonly Used Constants (pi...) 
      RT_20 = SQRT_3

! 210:[emtconst] Commonly Used Constants (pi...) 
      RT_19 = SQRT_2

! 220:[mult] Multiplier 

! 230:[div] Divider 

! 240:[div] Divider 

! 250:[gain] Gain Block 

! 260:[mult] Multiplier 

! 270:[mult] Multiplier 

! 280:[mult] Multiplier 

! 290:[mult] Multiplier 

! 300:[integral] Interpolated Integrator 
      RTCF(NRTCF) = 0.0
      NRTCF = NRTCF + 1

! 310:[mult] Multiplier 

! 320:[div] Divider 

! 330:[mult] Multiplier 

! 340:[div] Divider 

! 350:[datatap] Scalar/Array Tap 

! 360:[datatap] Scalar/Array Tap 

! 370:[div] Divider 

! 380:[datatap] Scalar/Array Tap 

! 390:[datatap] Scalar/Array Tap 

! 400:[datatap] Scalar/Array Tap 

! 410:[abcdq0] abc dq0 transformation 

! 420:[datatap] Scalar/Array Tap 

! 430:[abcdq0] abc dq0 transformation 

! 440:[pgb] Output Channel 'Vq'

! 450:[pgb] Output Channel 'Vd'

! 460:[pgb] Output Channel 'Iq'

! 470:[pgb] Output Channel 'Id'

! 480:[div] Divider 

! 490:[mult] Multiplier 

! 500:[gain] Gain Block 

! 510:[varrlc] Variable R, L or C  
      CALL E_VARRLC1_CFG(1 ,SS(1) ,  (IBRCH(1)+1), 0)
      CALL E_VARRLC1_CFG(1 ,SS(1) ,  (IBRCH(1)+2), 0)
      CALL E_VARRLC1_CFG(1 ,SS(1) ,  (IBRCH(1)+3), 0)

! 520:[varrlc] Variable R, L or C  
      CALL E_VARRLC1_CFG(0 ,SS(1) ,  (IBRCH(1)+4), 0)
      CALL E_VARRLC1_CFG(0 ,SS(1) ,  (IBRCH(1)+5), 0)
      CALL E_VARRLC1_CFG(0 ,SS(1) ,  (IBRCH(1)+6), 0)

      RETURN
      END

!=======================================================================

      SUBROUTINE PI_SectionOut_Begin()

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------


!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments

! Electrical Node Indices
      INTEGER  NT_2(3)

! Control Signals
      REAL     RT_9, RT_15, RT_16, RT_17, RT_19
      REAL     RT_20, RT_21

! Internal Variables
      INTEGER  IVD1_1

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER IT_0                                ! Storage Indices
      INTEGER ISUBS, SS(1), IBRCH(1), INODE       ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------


! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      INODE     = NNODE + 2
      NNODE     = NNODE + 14
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

! Initialize Subsystem Mapping

      ISUBS = NSUBS + 0
      NSUBS = NSUBS + 1

      DO IT_0 = 1,1
         SS(IT_0) = SUBS(ISUBS + IT_0)
      END DO

! Initialize Branch Mapping.

      IBRCH(1)     = NBRCH(SS(1))
      NBRCH(SS(1)) = NBRCH(SS(1)) + 9

!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


! Array (1:3) quantities...
      DO IT_0 = 1,3
         NT_2(IT_0) = NODE(INODE + 9 + IT_0)
      END DO

!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 10:[multimeter] Multimeter 
      IVD1_1 = NRTCF
      NRTCF  = NRTCF + 5
      IF (ABS(100.0) .GT. 1.0E-20) THEN
        RTCF(IVD1_1) = 1.0/ABS(100.0)
      ELSE
        RTCF(IVD1_1) = 1.0
      ENDIF
      IF (ABS(230.0) .GT. 1.0E-20) THEN
        RTCF(IVD1_1+1) = 1.0/ABS(230.0)
      ELSE
        RTCF(IVD1_1+1) = 1.0
      ENDIF
      RTCF(IVD1_1+2) = 0.02
      IF (ABS(1.0) .GT. 1.0E-20) THEN
        RTCF(IVD1_1+4) = 1.0/ABS(1.0)
      ELSE
        RTCF(IVD1_1+4) = 1.0
      ENDIF

! 20:[pgb] Output Channel 'Vpi_inst'

! 50:[pgb] Output Channel 'Ipi_inst'

! 150:[const] Real Constant 
      RT_9 = 60.0

! 160:[emtconst] Commonly Used Constants (pi...) 
      RT_17 = TWO_PI

! 170:[const] Real Constant 
      RT_15 = 1.6375

! 180:[const] Real Constant 
      RT_21 = 34.5

! 190:[emtconst] Commonly Used Constants (pi...) 
      RT_16 = SQRT_2

! 200:[emtconst] Commonly Used Constants (pi...) 
      RT_20 = SQRT_3

! 210:[emtconst] Commonly Used Constants (pi...) 
      RT_19 = SQRT_2

      RETURN
      END

