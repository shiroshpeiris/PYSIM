!=======================================================================
! Generated by: PSCAD v5.0.0.0
! Warning:  The content of this file is automatically generated.
!           Do not modify, as any changes made here will be lost!
!-----------------------------------------------------------------------
! Component     : Converter_16_2_1
! Description   : 
!-----------------------------------------------------------------------


!=======================================================================

      SUBROUTINE Converter_16_2_1Dyn(Pref, Qref, V_MV, PI_x)

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------

!     SUBR    EMTDC_X2COMP  ! 'Comparator with Interpolation'
!     SUBR    PI_SectionDyn  ! 
!     SUBR    Converter_16_2Dyn  ! 
!     SUBR    3PHVSRC       ! 3-Phase Source model

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments
      REAL,    INTENT(IN)  :: Pref, Qref, V_MV
      REAL,    INTENT(IN)  :: PI_x

! Electrical Node Indices

! Control Signals
      REAL     RT_1, RT_2

! Internal Variables
      REAL     RVD2_1(2), RVD1_1, RVD1_2, RVD1_3
      REAL     RVD1_4

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOF, IT_0                         ! Storage Indices
      INTEGER ISUBS, SS(9), IBRCH(9), INODE       ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      TXFR(NTXFR,1) = NSTOL
      TXFR(NTXFR,2) = NSTOI
      TXFR(NTXFR,3) = NSTOF
      TXFR(NTXFR,4) = NSTOC

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      ISTOF     = NSTOF
      NSTOF     = NSTOF + 6
      INODE     = NNODE + 2
      NNODE     = NNODE + 29
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

! Initialize Subsystem Mapping

      ISUBS = NSUBS + 0
      NSUBS = NSUBS + 9

      DO IT_0 = 1,9
         SS(IT_0) = SUBS(ISUBS + IT_0)
      END DO

! Initialize Branch Mapping.

      IBRCH(1)     = NBRCH(SS(1))
      NBRCH(SS(1)) = NBRCH(SS(1)) + 0


      IBRCH(2)     = NBRCH(SS(2))
      NBRCH(SS(2)) = NBRCH(SS(2)) + 0


      IBRCH(3)     = NBRCH(SS(3))
      NBRCH(SS(3)) = NBRCH(SS(3)) + 0


      IBRCH(4)     = NBRCH(SS(4))
      NBRCH(SS(4)) = NBRCH(SS(4)) + 0


      IBRCH(5)     = NBRCH(SS(5))
      NBRCH(SS(5)) = NBRCH(SS(5)) + 0


      IBRCH(6)     = NBRCH(SS(6))
      NBRCH(SS(6)) = NBRCH(SS(6)) + 0


      IBRCH(7)     = NBRCH(SS(7))
      NBRCH(SS(7)) = NBRCH(SS(7)) + 0


      IBRCH(8)     = NBRCH(SS(8))
      NBRCH(SS(8)) = NBRCH(SS(8)) + 0


      IBRCH(9)     = NBRCH(SS(9))
      NBRCH(SS(9)) = NBRCH(SS(9)) + 3

!---------------------------------------
! Transfers from storage arrays 
!---------------------------------------

      RT_1     = STOF(ISTOF + 5)
      RT_2     = STOF(ISTOF + 6)


!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Configuration of Models 
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'Converter_16_2_1.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSD:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 30:[time-sig] Output of Simulation Time 
      RT_2 = TIME

! 40:[compare] Single Input Level Comparator 
!
!
      CALL EMTDC_X2COMP(0,0,600.0,RT_2,60.0,0.0,63.0,RVD2_1)
      RT_1 = RVD2_1(1)

! 50:[PI_Section]  'PI_Section_1'
      CALL PI_SectionDyn(0.00369, 0.00454, 0.00061, 376.991, 11.9025, 1.&
     &0)


! 60:[PI_Section]  'PI_Section_1'
      CALL PI_SectionDyn(0.000502, 0.000512, 5.0e-05, 376.991, 11.9025, &
     &2.0)


! 70:[PI_Section]  'PI_Section_1'
      CALL PI_SectionDyn(0.000502, 0.000512, 5.0e-05, 376.991, 11.9025, &
     &3.0)


! 80:[PI_Section]  'PI_Section_1'
      CALL PI_SectionDyn(0.000502, 0.000512, 5.0e-05, 376.991, 11.9025, &
     &2.0)


! 90:[PI_Section]  'PI_Section_1'
      CALL PI_SectionDyn(0.000502, 0.000512, 5.0e-05, 376.991, 11.9025, &
     &3.0)


! 100:[PI_Section]  'PI_Section_1'
      CALL PI_SectionDyn(0.000502, 0.000512, 5.0e-05, 376.991, 11.9025, &
     &3.0)


! 110:[PI_Section]  'PI_Section_1'
      CALL PI_SectionDyn(0.000502, 0.000512, 5.0e-05, 376.991, 11.9025, &
     &3.0)


! 280:[Converter_16_2]  
      CALL Converter_16_2Dyn(Pref, Qref, 1.0, V_MV, 6.0)


! 290:[Converter_16_2]  
      CALL Converter_16_2Dyn(Pref, Qref, 1.0, V_MV, 5.0)


! 300:[Converter_16_2]  
      CALL Converter_16_2Dyn(Pref, Qref, 1.0, V_MV, 2.0)


! 310:[Converter_16_2]  
      CALL Converter_16_2Dyn(Pref, Qref, 1.0, V_MV, 7.0)


! 320:[Converter_16_2]  
      CALL Converter_16_2Dyn(Pref, Qref, 1.0, V_MV, 4.0)


! 330:[Converter_16_2]  
      CALL Converter_16_2Dyn(Pref, Qref, 1.0, V_MV, 1.0)


! 340:[Converter_16_2]  
      CALL Converter_16_2Dyn(Pref, Qref, 1.0, V_MV, 9.0)


! 350:[Converter_16_2]  
      CALL Converter_16_2Dyn(Pref, Qref, 1.0, V_MV, 3.0)


! 360:[source_3] Three Phase Voltage Source Model 2 'Source 1'
! Three Phase Source: Source 1  Type: Ideal
!  Freq: externally controlled
      RVD1_1 = RTCF(NRTCF)
      RVD1_2 = RT_1 * TWO_PI
      RVD1_3  = 0.0*PI_BY180
      RVD1_4 = RTCF(NRTCF+3)
      NRTCF  = NRTCF + 4
      CALL EMTDC_3PHVSRC(SS(9), (IBRCH(9)+1), (IBRCH(9)+2), (IBRCH(9)+3)&
     &, RVD1_4, .TRUE., RVD1_1 , RVD1_2, RVD1_3)
!

!---------------------------------------
! Feedbacks and transfers to storage 
!---------------------------------------

      STOF(ISTOF + 1) = Pref
      STOF(ISTOF + 2) = Qref
      STOF(ISTOF + 3) = V_MV
      STOF(ISTOF + 4) = PI_x
      STOF(ISTOF + 5) = RT_1
      STOF(ISTOF + 6) = RT_2


!---------------------------------------
! Transfer to Exports
!---------------------------------------

!---------------------------------------
! Close Model Data read 
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE Converter_16_2_1Out()

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------

!     SUBR    PI_SectionOut  ! 
!     SUBR    Converter_16_2Out  ! 

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Electrical Node Indices

! Control Signals

! Internal Variables

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOL, ISTOI, ISTOF, ISTOC, IT_0    ! Storage Indices
      INTEGER ISUBS, SS(9), IBRCH(9), INODE       ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      ISTOL = TXFR(NTXFR,1)
      ISTOI = TXFR(NTXFR,2)
      ISTOF = TXFR(NTXFR,3)
      ISTOC = TXFR(NTXFR,4)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      INODE     = NNODE + 2
      NNODE     = NNODE + 29
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

! Initialize Subsystem Mapping

      ISUBS = NSUBS + 0
      NSUBS = NSUBS + 9

      DO IT_0 = 1,9
         SS(IT_0) = SUBS(ISUBS + IT_0)
      END DO

! Initialize Branch Mapping.

      IBRCH(1)     = NBRCH(SS(1))
      NBRCH(SS(1)) = NBRCH(SS(1)) + 0


      IBRCH(2)     = NBRCH(SS(2))
      NBRCH(SS(2)) = NBRCH(SS(2)) + 0


      IBRCH(3)     = NBRCH(SS(3))
      NBRCH(SS(3)) = NBRCH(SS(3)) + 0


      IBRCH(4)     = NBRCH(SS(4))
      NBRCH(SS(4)) = NBRCH(SS(4)) + 0


      IBRCH(5)     = NBRCH(SS(5))
      NBRCH(SS(5)) = NBRCH(SS(5)) + 0


      IBRCH(6)     = NBRCH(SS(6))
      NBRCH(SS(6)) = NBRCH(SS(6)) + 0


      IBRCH(7)     = NBRCH(SS(7))
      NBRCH(SS(7)) = NBRCH(SS(7)) + 0


      IBRCH(8)     = NBRCH(SS(8))
      NBRCH(SS(8)) = NBRCH(SS(8)) + 0


      IBRCH(9)     = NBRCH(SS(9))
      NBRCH(SS(9)) = NBRCH(SS(9)) + 3

!---------------------------------------
! Transfers from storage arrays 
!---------------------------------------



!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Configuration of Models 
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'Converter_16_2_1.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSO:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 50:[PI_Section]  'PI_Section_1'
      CALL PI_SectionOut()


! 60:[PI_Section]  'PI_Section_1'
      CALL PI_SectionOut()


! 70:[PI_Section]  'PI_Section_1'
      CALL PI_SectionOut()


! 80:[PI_Section]  'PI_Section_1'
      CALL PI_SectionOut()


! 90:[PI_Section]  'PI_Section_1'
      CALL PI_SectionOut()


! 100:[PI_Section]  'PI_Section_1'
      CALL PI_SectionOut()


! 110:[PI_Section]  'PI_Section_1'
      CALL PI_SectionOut()


! 280:[Converter_16_2]  
      CALL Converter_16_2Out()


! 290:[Converter_16_2]  
      CALL Converter_16_2Out()


! 300:[Converter_16_2]  
      CALL Converter_16_2Out()


! 310:[Converter_16_2]  
      CALL Converter_16_2Out()


! 320:[Converter_16_2]  
      CALL Converter_16_2Out()


! 330:[Converter_16_2]  
      CALL Converter_16_2Out()


! 340:[Converter_16_2]  
      CALL Converter_16_2Out()


! 350:[Converter_16_2]  
      CALL Converter_16_2Out()


!---------------------------------------
! Feedbacks and transfers to storage 
!---------------------------------------



!---------------------------------------
! Close Model Data read 
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE Converter_16_2_1Dyn_Begin(V_MV, PI_x)

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------

!     SUBR    PI_SectionDyn_Begin  ! 
!     SUBR    Converter_16_2Dyn_Begin  ! 

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments
      REAL,    INTENT(IN)  :: V_MV, PI_x

! Electrical Node Indices

! Control Signals

! Internal Variables

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER IT_0                                ! Storage Indices
      INTEGER ISUBS, SS(9), IBRCH(9), INODE       ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------


! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      INODE     = NNODE + 2
      NNODE     = NNODE + 29
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

! Initialize Subsystem Mapping

      ISUBS = NSUBS + 0
      NSUBS = NSUBS + 9

      DO IT_0 = 1,9
         SS(IT_0) = SUBS(ISUBS + IT_0)
      END DO

! Initialize Branch Mapping.

      IBRCH(1)     = NBRCH(SS(1))
      NBRCH(SS(1)) = NBRCH(SS(1)) + 0


      IBRCH(2)     = NBRCH(SS(2))
      NBRCH(SS(2)) = NBRCH(SS(2)) + 0


      IBRCH(3)     = NBRCH(SS(3))
      NBRCH(SS(3)) = NBRCH(SS(3)) + 0


      IBRCH(4)     = NBRCH(SS(4))
      NBRCH(SS(4)) = NBRCH(SS(4)) + 0


      IBRCH(5)     = NBRCH(SS(5))
      NBRCH(SS(5)) = NBRCH(SS(5)) + 0


      IBRCH(6)     = NBRCH(SS(6))
      NBRCH(SS(6)) = NBRCH(SS(6)) + 0


      IBRCH(7)     = NBRCH(SS(7))
      NBRCH(SS(7)) = NBRCH(SS(7)) + 0


      IBRCH(8)     = NBRCH(SS(8))
      NBRCH(SS(8)) = NBRCH(SS(8)) + 0


      IBRCH(9)     = NBRCH(SS(9))
      NBRCH(SS(9)) = NBRCH(SS(9)) + 3

!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 30:[time-sig] Output of Simulation Time 

! 40:[compare] Single Input Level Comparator 

! 50:[PI_Section]  'PI_Section_1'
      CALL PI_SectionDyn_Begin()


! 60:[PI_Section]  'PI_Section_1'
      CALL PI_SectionDyn_Begin()


! 70:[PI_Section]  'PI_Section_1'
      CALL PI_SectionDyn_Begin()


! 80:[PI_Section]  'PI_Section_1'
      CALL PI_SectionDyn_Begin()


! 90:[PI_Section]  'PI_Section_1'
      CALL PI_SectionDyn_Begin()


! 100:[PI_Section]  'PI_Section_1'
      CALL PI_SectionDyn_Begin()


! 110:[PI_Section]  'PI_Section_1'
      CALL PI_SectionDyn_Begin()


! 280:[Converter_16_2]  
      CALL Converter_16_2Dyn_Begin(1.0, V_MV)


! 290:[Converter_16_2]  
      CALL Converter_16_2Dyn_Begin(1.0, V_MV)


! 300:[Converter_16_2]  
      CALL Converter_16_2Dyn_Begin(1.0, V_MV)


! 310:[Converter_16_2]  
      CALL Converter_16_2Dyn_Begin(1.0, V_MV)


! 320:[Converter_16_2]  
      CALL Converter_16_2Dyn_Begin(1.0, V_MV)


! 330:[Converter_16_2]  
      CALL Converter_16_2Dyn_Begin(1.0, V_MV)


! 340:[Converter_16_2]  
      CALL Converter_16_2Dyn_Begin(1.0, V_MV)


! 350:[Converter_16_2]  
      CALL Converter_16_2Dyn_Begin(1.0, V_MV)


! 360:[source_3] Three Phase Voltage Source Model 2 'Source 1'
      RTCF(NRTCF)   = 34.5*SQRT_2*SQRT_1BY3
      RTCF(NRTCF+3) = 0.0
      NRTCF = NRTCF + 4

      RETURN
      END

!=======================================================================

      SUBROUTINE Converter_16_2_1Out_Begin(V_MV, PI_x)

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------

!     SUBR    PI_SectionOut_Begin  ! 
!     SUBR    Converter_16_2Out_Begin  ! 

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments
      REAL,    INTENT(IN)  :: V_MV, PI_x

! Electrical Node Indices

! Control Signals

! Internal Variables

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER IT_0                                ! Storage Indices
      INTEGER ISUBS, SS(9), IBRCH(9), INODE       ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------


! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      INODE     = NNODE + 2
      NNODE     = NNODE + 29
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

! Initialize Subsystem Mapping

      ISUBS = NSUBS + 0
      NSUBS = NSUBS + 9

      DO IT_0 = 1,9
         SS(IT_0) = SUBS(ISUBS + IT_0)
      END DO

! Initialize Branch Mapping.

      IBRCH(1)     = NBRCH(SS(1))
      NBRCH(SS(1)) = NBRCH(SS(1)) + 0


      IBRCH(2)     = NBRCH(SS(2))
      NBRCH(SS(2)) = NBRCH(SS(2)) + 0


      IBRCH(3)     = NBRCH(SS(3))
      NBRCH(SS(3)) = NBRCH(SS(3)) + 0


      IBRCH(4)     = NBRCH(SS(4))
      NBRCH(SS(4)) = NBRCH(SS(4)) + 0


      IBRCH(5)     = NBRCH(SS(5))
      NBRCH(SS(5)) = NBRCH(SS(5)) + 0


      IBRCH(6)     = NBRCH(SS(6))
      NBRCH(SS(6)) = NBRCH(SS(6)) + 0


      IBRCH(7)     = NBRCH(SS(7))
      NBRCH(SS(7)) = NBRCH(SS(7)) + 0


      IBRCH(8)     = NBRCH(SS(8))
      NBRCH(SS(8)) = NBRCH(SS(8)) + 0


      IBRCH(9)     = NBRCH(SS(9))
      NBRCH(SS(9)) = NBRCH(SS(9)) + 3

!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 50:[PI_Section]  'PI_Section_1'
      CALL PI_SectionOut_Begin()


! 60:[PI_Section]  'PI_Section_1'
      CALL PI_SectionOut_Begin()


! 70:[PI_Section]  'PI_Section_1'
      CALL PI_SectionOut_Begin()


! 80:[PI_Section]  'PI_Section_1'
      CALL PI_SectionOut_Begin()


! 90:[PI_Section]  'PI_Section_1'
      CALL PI_SectionOut_Begin()


! 100:[PI_Section]  'PI_Section_1'
      CALL PI_SectionOut_Begin()


! 110:[PI_Section]  'PI_Section_1'
      CALL PI_SectionOut_Begin()


! 280:[Converter_16_2]  
      CALL Converter_16_2Out_Begin(1.0, V_MV)


! 290:[Converter_16_2]  
      CALL Converter_16_2Out_Begin(1.0, V_MV)


! 300:[Converter_16_2]  
      CALL Converter_16_2Out_Begin(1.0, V_MV)


! 310:[Converter_16_2]  
      CALL Converter_16_2Out_Begin(1.0, V_MV)


! 320:[Converter_16_2]  
      CALL Converter_16_2Out_Begin(1.0, V_MV)


! 330:[Converter_16_2]  
      CALL Converter_16_2Out_Begin(1.0, V_MV)


! 340:[Converter_16_2]  
      CALL Converter_16_2Out_Begin(1.0, V_MV)


! 350:[Converter_16_2]  
      CALL Converter_16_2Out_Begin(1.0, V_MV)


      RETURN
      END

