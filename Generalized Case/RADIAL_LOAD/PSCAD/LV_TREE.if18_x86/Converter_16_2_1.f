!=======================================================================
! Generated by: PSCAD v5.0.1.0
! Warning:  The content of this file is automatically generated.
!           Do not modify, as any changes made here will be lost!
!-----------------------------------------------------------------------
! Component     : Converter_16_2_1
! Description   : 
!-----------------------------------------------------------------------


!=======================================================================

      SUBROUTINE Converter_16_2_1Dyn(Pref, Qref, V_MV, PI_x)

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------

!     SUBR    PI_SectionDyn  ! 
!     SUBR    Converter_16_2Dyn  ! 

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments
      REAL,    INTENT(IN)  :: Pref, Qref, V_MV
      REAL,    INTENT(IN)  :: PI_x

! Electrical Node Indices

! Control Signals

! Internal Variables

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOF, IT_0                         ! Storage Indices
      INTEGER ISUBS, SS(8), IBRCH(8), INODE       ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      TXFR(NTXFR,1) = NSTOL
      TXFR(NTXFR,2) = NSTOI
      TXFR(NTXFR,3) = NSTOF
      TXFR(NTXFR,4) = NSTOC

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      ISTOF     = NSTOF
      NSTOF     = NSTOF + 4
      INODE     = NNODE + 2
      NNODE     = NNODE + 26
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

! Initialize Subsystem Mapping

      ISUBS = NSUBS + 0
      NSUBS = NSUBS + 8

      DO IT_0 = 1,8
         SS(IT_0) = SUBS(ISUBS + IT_0)
      END DO

! Initialize Branch Mapping.

      IBRCH(1)     = NBRCH(SS(1))
      NBRCH(SS(1)) = NBRCH(SS(1)) + 0


      IBRCH(2)     = NBRCH(SS(2))
      NBRCH(SS(2)) = NBRCH(SS(2)) + 0


      IBRCH(3)     = NBRCH(SS(3))
      NBRCH(SS(3)) = NBRCH(SS(3)) + 0


      IBRCH(4)     = NBRCH(SS(4))
      NBRCH(SS(4)) = NBRCH(SS(4)) + 0


      IBRCH(5)     = NBRCH(SS(5))
      NBRCH(SS(5)) = NBRCH(SS(5)) + 0


      IBRCH(6)     = NBRCH(SS(6))
      NBRCH(SS(6)) = NBRCH(SS(6)) + 0


      IBRCH(7)     = NBRCH(SS(7))
      NBRCH(SS(7)) = NBRCH(SS(7)) + 0


      IBRCH(8)     = NBRCH(SS(8))
      NBRCH(SS(8)) = NBRCH(SS(8)) + 33

!---------------------------------------
! Transfers from storage arrays 
!---------------------------------------



!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Configuration of Models 
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'Converter_16_2_1.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSD:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 30:[PI_Section]  'PI_Section_1'
      CALL PI_SectionDyn(0.000502, 0.000512, 5.0e-05, 376.991, 11.9025, &
     &2.0)


! 40:[PI_Section]  'PI_Section_1'
      CALL PI_SectionDyn(0.000502, 0.000512, 5.0e-05, 376.991, 11.9025, &
     &3.0)


! 50:[PI_Section]  'PI_Section_1'
      CALL PI_SectionDyn(0.000502, 0.000512, 5.0e-05, 376.991, 11.9025, &
     &2.0)


! 60:[PI_Section]  'PI_Section_1'
      CALL PI_SectionDyn(0.000502, 0.000512, 5.0e-05, 376.991, 11.9025, &
     &3.0)


! 70:[PI_Section]  'PI_Section_1'
      CALL PI_SectionDyn(0.000502, 0.000512, 5.0e-05, 376.991, 11.9025, &
     &3.0)


! 80:[PI_Section]  'PI_Section_1'
      CALL PI_SectionDyn(0.000502, 0.000512, 5.0e-05, 376.991, 11.9025, &
     &3.0)


! 250:[Converter_16_2]  
      CALL Converter_16_2Dyn(Pref, Qref, 1.0, V_MV, 6.0)


! 260:[Converter_16_2]  
      CALL Converter_16_2Dyn(Pref, Qref, 1.0, V_MV, 5.0)


! 270:[Converter_16_2]  
      CALL Converter_16_2Dyn(Pref, Qref, 1.0, V_MV, 2.0)


! 280:[Converter_16_2]  
      CALL Converter_16_2Dyn(Pref, Qref, 1.0, V_MV, 7.0)


! 290:[Converter_16_2]  
      CALL Converter_16_2Dyn(Pref, Qref, 1.0, V_MV, 4.0)


! 300:[Converter_16_2]  
      CALL Converter_16_2Dyn(Pref, Qref, 1.0, V_MV, 1.0)


! 310:[Converter_16_2]  
      CALL Converter_16_2Dyn(Pref, Qref, 1.0, V_MV, 9.0)


! 320:[Converter_16_2]  
      CALL Converter_16_2Dyn(Pref, Qref, 1.0, V_MV, 3.0)


!---------------------------------------
! Feedbacks and transfers to storage 
!---------------------------------------

      STOF(ISTOF + 1) = Pref
      STOF(ISTOF + 2) = Qref
      STOF(ISTOF + 3) = V_MV
      STOF(ISTOF + 4) = PI_x


!---------------------------------------
! Transfer to Exports
!---------------------------------------

!---------------------------------------
! Close Model Data read 
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE Converter_16_2_1Out()

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------

!     SUBR    PI_SectionOut  ! 
!     SUBR    Converter_16_2Out  ! 

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Electrical Node Indices

! Control Signals

! Internal Variables

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOL, ISTOI, ISTOF, ISTOC, IT_0    ! Storage Indices
      INTEGER ISUBS, SS(8), IBRCH(8), INODE       ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      ISTOL = TXFR(NTXFR,1)
      ISTOI = TXFR(NTXFR,2)
      ISTOF = TXFR(NTXFR,3)
      ISTOC = TXFR(NTXFR,4)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      INODE     = NNODE + 2
      NNODE     = NNODE + 26
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

! Initialize Subsystem Mapping

      ISUBS = NSUBS + 0
      NSUBS = NSUBS + 8

      DO IT_0 = 1,8
         SS(IT_0) = SUBS(ISUBS + IT_0)
      END DO

! Initialize Branch Mapping.

      IBRCH(1)     = NBRCH(SS(1))
      NBRCH(SS(1)) = NBRCH(SS(1)) + 0


      IBRCH(2)     = NBRCH(SS(2))
      NBRCH(SS(2)) = NBRCH(SS(2)) + 0


      IBRCH(3)     = NBRCH(SS(3))
      NBRCH(SS(3)) = NBRCH(SS(3)) + 0


      IBRCH(4)     = NBRCH(SS(4))
      NBRCH(SS(4)) = NBRCH(SS(4)) + 0


      IBRCH(5)     = NBRCH(SS(5))
      NBRCH(SS(5)) = NBRCH(SS(5)) + 0


      IBRCH(6)     = NBRCH(SS(6))
      NBRCH(SS(6)) = NBRCH(SS(6)) + 0


      IBRCH(7)     = NBRCH(SS(7))
      NBRCH(SS(7)) = NBRCH(SS(7)) + 0


      IBRCH(8)     = NBRCH(SS(8))
      NBRCH(SS(8)) = NBRCH(SS(8)) + 33

!---------------------------------------
! Transfers from storage arrays 
!---------------------------------------



!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Configuration of Models 
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'Converter_16_2_1.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSO:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 30:[PI_Section]  'PI_Section_1'
      CALL PI_SectionOut()


! 40:[PI_Section]  'PI_Section_1'
      CALL PI_SectionOut()


! 50:[PI_Section]  'PI_Section_1'
      CALL PI_SectionOut()


! 60:[PI_Section]  'PI_Section_1'
      CALL PI_SectionOut()


! 70:[PI_Section]  'PI_Section_1'
      CALL PI_SectionOut()


! 80:[PI_Section]  'PI_Section_1'
      CALL PI_SectionOut()


! 250:[Converter_16_2]  
      CALL Converter_16_2Out()


! 260:[Converter_16_2]  
      CALL Converter_16_2Out()


! 270:[Converter_16_2]  
      CALL Converter_16_2Out()


! 280:[Converter_16_2]  
      CALL Converter_16_2Out()


! 290:[Converter_16_2]  
      CALL Converter_16_2Out()


! 300:[Converter_16_2]  
      CALL Converter_16_2Out()


! 310:[Converter_16_2]  
      CALL Converter_16_2Out()


! 320:[Converter_16_2]  
      CALL Converter_16_2Out()


!---------------------------------------
! Feedbacks and transfers to storage 
!---------------------------------------



!---------------------------------------
! Close Model Data read 
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE Converter_16_2_1Dyn_Begin(V_MV, PI_x)

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------

!     SUBR    PI_SectionDyn_Begin  ! 
!     SUBR    Converter_16_2Dyn_Begin  ! 

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments
      REAL,    INTENT(IN)  :: V_MV, PI_x

! Electrical Node Indices

! Control Signals

! Internal Variables

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER IT_0                                ! Storage Indices
      INTEGER ISUBS, SS(8), IBRCH(8), INODE       ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------


! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      INODE     = NNODE + 2
      NNODE     = NNODE + 26
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

! Initialize Subsystem Mapping

      ISUBS = NSUBS + 0
      NSUBS = NSUBS + 8

      DO IT_0 = 1,8
         SS(IT_0) = SUBS(ISUBS + IT_0)
      END DO

! Initialize Branch Mapping.

      IBRCH(1)     = NBRCH(SS(1))
      NBRCH(SS(1)) = NBRCH(SS(1)) + 0


      IBRCH(2)     = NBRCH(SS(2))
      NBRCH(SS(2)) = NBRCH(SS(2)) + 0


      IBRCH(3)     = NBRCH(SS(3))
      NBRCH(SS(3)) = NBRCH(SS(3)) + 0


      IBRCH(4)     = NBRCH(SS(4))
      NBRCH(SS(4)) = NBRCH(SS(4)) + 0


      IBRCH(5)     = NBRCH(SS(5))
      NBRCH(SS(5)) = NBRCH(SS(5)) + 0


      IBRCH(6)     = NBRCH(SS(6))
      NBRCH(SS(6)) = NBRCH(SS(6)) + 0


      IBRCH(7)     = NBRCH(SS(7))
      NBRCH(SS(7)) = NBRCH(SS(7)) + 0


      IBRCH(8)     = NBRCH(SS(8))
      NBRCH(SS(8)) = NBRCH(SS(8)) + 33

!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 30:[PI_Section]  'PI_Section_1'
      CALL PI_SectionDyn_Begin()


! 40:[PI_Section]  'PI_Section_1'
      CALL PI_SectionDyn_Begin()


! 50:[PI_Section]  'PI_Section_1'
      CALL PI_SectionDyn_Begin()


! 60:[PI_Section]  'PI_Section_1'
      CALL PI_SectionDyn_Begin()


! 70:[PI_Section]  'PI_Section_1'
      CALL PI_SectionDyn_Begin()


! 80:[PI_Section]  'PI_Section_1'
      CALL PI_SectionDyn_Begin()


! 250:[Converter_16_2]  
      CALL Converter_16_2Dyn_Begin(1.0, V_MV)


! 260:[Converter_16_2]  
      CALL Converter_16_2Dyn_Begin(1.0, V_MV)


! 270:[Converter_16_2]  
      CALL Converter_16_2Dyn_Begin(1.0, V_MV)


! 280:[Converter_16_2]  
      CALL Converter_16_2Dyn_Begin(1.0, V_MV)


! 290:[Converter_16_2]  
      CALL Converter_16_2Dyn_Begin(1.0, V_MV)


! 300:[Converter_16_2]  
      CALL Converter_16_2Dyn_Begin(1.0, V_MV)


! 310:[Converter_16_2]  
      CALL Converter_16_2Dyn_Begin(1.0, V_MV)


! 320:[Converter_16_2]  
      CALL Converter_16_2Dyn_Begin(1.0, V_MV)


      RETURN
      END

!=======================================================================

      SUBROUTINE Converter_16_2_1Out_Begin(V_MV, PI_x)

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------

!     SUBR    PI_SectionOut_Begin  ! 
!     SUBR    Converter_16_2Out_Begin  ! 

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments
      REAL,    INTENT(IN)  :: V_MV, PI_x

! Electrical Node Indices

! Control Signals

! Internal Variables

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER IT_0                                ! Storage Indices
      INTEGER ISUBS, SS(8), IBRCH(8), INODE       ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------


! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      INODE     = NNODE + 2
      NNODE     = NNODE + 26
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

! Initialize Subsystem Mapping

      ISUBS = NSUBS + 0
      NSUBS = NSUBS + 8

      DO IT_0 = 1,8
         SS(IT_0) = SUBS(ISUBS + IT_0)
      END DO

! Initialize Branch Mapping.

      IBRCH(1)     = NBRCH(SS(1))
      NBRCH(SS(1)) = NBRCH(SS(1)) + 0


      IBRCH(2)     = NBRCH(SS(2))
      NBRCH(SS(2)) = NBRCH(SS(2)) + 0


      IBRCH(3)     = NBRCH(SS(3))
      NBRCH(SS(3)) = NBRCH(SS(3)) + 0


      IBRCH(4)     = NBRCH(SS(4))
      NBRCH(SS(4)) = NBRCH(SS(4)) + 0


      IBRCH(5)     = NBRCH(SS(5))
      NBRCH(SS(5)) = NBRCH(SS(5)) + 0


      IBRCH(6)     = NBRCH(SS(6))
      NBRCH(SS(6)) = NBRCH(SS(6)) + 0


      IBRCH(7)     = NBRCH(SS(7))
      NBRCH(SS(7)) = NBRCH(SS(7)) + 0


      IBRCH(8)     = NBRCH(SS(8))
      NBRCH(SS(8)) = NBRCH(SS(8)) + 33

!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 30:[PI_Section]  'PI_Section_1'
      CALL PI_SectionOut_Begin()


! 40:[PI_Section]  'PI_Section_1'
      CALL PI_SectionOut_Begin()


! 50:[PI_Section]  'PI_Section_1'
      CALL PI_SectionOut_Begin()


! 60:[PI_Section]  'PI_Section_1'
      CALL PI_SectionOut_Begin()


! 70:[PI_Section]  'PI_Section_1'
      CALL PI_SectionOut_Begin()


! 80:[PI_Section]  'PI_Section_1'
      CALL PI_SectionOut_Begin()


! 250:[Converter_16_2]  
      CALL Converter_16_2Out_Begin(1.0, V_MV)


! 260:[Converter_16_2]  
      CALL Converter_16_2Out_Begin(1.0, V_MV)


! 270:[Converter_16_2]  
      CALL Converter_16_2Out_Begin(1.0, V_MV)


! 280:[Converter_16_2]  
      CALL Converter_16_2Out_Begin(1.0, V_MV)


! 290:[Converter_16_2]  
      CALL Converter_16_2Out_Begin(1.0, V_MV)


! 300:[Converter_16_2]  
      CALL Converter_16_2Out_Begin(1.0, V_MV)


! 310:[Converter_16_2]  
      CALL Converter_16_2Out_Begin(1.0, V_MV)


! 320:[Converter_16_2]  
      CALL Converter_16_2Out_Begin(1.0, V_MV)


      RETURN
      END

