!=======================================================================
! Generated by: PSCAD v5.0.0.0
! Warning:  The content of this file is automatically generated.
!           Do not modify, as any changes made here will be lost!
!-----------------------------------------------------------------------
! Component     : VF_Control_7
! Description   : 
!-----------------------------------------------------------------------


!=======================================================================

      SUBROUTINE VF_Control_7Dyn(Vref, Igrid, Vgrid, I_inv, W, UFqref,  &
     &   Wgrid, Pdq, Qdq, Wref, VratedLLrms, Iratedphrms, Wrated, Lf,   &
     &   Cf)

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------

      REAL    EMTDC_XINT    ! 'Integrator /w Interpolation'
!     SUBR    TRDQO         ! DQ0 transformation
      REAL    EMTDC_XPI     ! 'Proportional-Integral Controller /w Interpolation'
!     SUBR    Current_Limiter_3Dyn  ! 
      REAL    REALPOLE      ! Real Pole

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments
      REAL,    INTENT(IN)  :: Igrid(3), Vgrid(3)
      REAL,    INTENT(IN)  :: I_inv(3), W, UFqref
      REAL,    INTENT(IN)  :: Wref, VratedLLrms
      REAL,    INTENT(IN)  :: Iratedphrms, Wrated
      REAL,    INTENT(IN)  :: Lf, Cf
      REAL,    INTENT(OUT) :: Vref(3), Wgrid, Pdq
      REAL,    INTENT(OUT) :: Qdq

! Electrical Node Indices

! Control Signals
      REAL     RT_1, RT_2, RT_3, RT_4, RT_5, RT_6
      REAL     Err, RT_7, RT_8, RT_9, RT_10
      REAL     RT_11, RT_12, RT_13, RT_14, RT_15
      REAL     Ucd, RT_16, Ucq, RT_17, RT_18
      REAL     RT_19, RT_20(3), RT_21, RT_22
      REAL     RT_23, RT_24, RT_25, RT_26, RT_27
      REAL     RT_28, RT_29, RT_30, RT_31, RT_32
      REAL     RT_33, RT_34, RT_35, RT_36, RT_37
      REAL     Delta_Vc, RT_38, RT_39, Theta_ref
      REAL     RT_40, RT_41, RT_42, RT_43
      REAL     Delta_Vf, RT_44, RT_45, RT_46
      REAL     RT_47, UFq, UFd, IWd, IWq, ISq
      REAL     ISd, Theta, RT_48, RT_49, RT_50
      REAL     RT_51, RT_52(3), RT_53(3), Vbase
      REAL     RT_54(3), Ibase, RT_55, RT_56
      REAL     RT_57, RT_58, RT_59, MVAbase
      REAL     wLf_pu, RT_60, RT_61, wCf_pu
      REAL     Zbase, RT_62, RT_63, Cbase, RT_64
      REAL     RT_65, RT_66, RT_67, RT_68, RT_69
      REAL     RT_70, RT_71, RT_72, RT_73, RT_74
      REAL     RT_75, RT_76, KpI, TiI, RT_77
      REAL     RT_78, KpV, RT_79, RT_80, TiV
      REAL     RT_81, Lbase

! Internal Variables
      REAL     RVD1_1, RVD2_1(2), RVD2_2(2)

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOF, IT_0                         ! Storage Indices
      INTEGER IPGB                                ! Control/Monitoring
      INTEGER ISUBS                               ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      TXFR(NTXFR,1) = NSTOL
      TXFR(NTXFR,2) = NSTOI
      TXFR(NTXFR,3) = NSTOF
      TXFR(NTXFR,4) = NSTOC

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      ISTOF     = NSTOF
      NSTOF     = NSTOF + 137
      IPGB      = NPGB
      NPGB      = NPGB + 21
      NNODE     = NNODE + 2
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Transfers from storage arrays 
!---------------------------------------

      Wgrid    = STOF(ISTOF + 15)
      Pdq      = STOF(ISTOF + 16)
      Qdq      = STOF(ISTOF + 17)
      RT_1     = STOF(ISTOF + 24)
      RT_2     = STOF(ISTOF + 25)
      RT_3     = STOF(ISTOF + 26)
      RT_4     = STOF(ISTOF + 27)
      RT_5     = STOF(ISTOF + 28)
      RT_6     = STOF(ISTOF + 29)
      Err      = STOF(ISTOF + 30)
      RT_7     = STOF(ISTOF + 31)
      RT_8     = STOF(ISTOF + 32)
      RT_9     = STOF(ISTOF + 33)
      RT_10    = STOF(ISTOF + 34)
      RT_11    = STOF(ISTOF + 35)
      RT_12    = STOF(ISTOF + 36)
      RT_13    = STOF(ISTOF + 37)
      RT_14    = STOF(ISTOF + 38)
      RT_15    = STOF(ISTOF + 39)
      Ucd      = STOF(ISTOF + 40)
      RT_16    = STOF(ISTOF + 41)
      Ucq      = STOF(ISTOF + 42)
      RT_17    = STOF(ISTOF + 43)
      RT_18    = STOF(ISTOF + 44)
      RT_19    = STOF(ISTOF + 45)
      RT_21    = STOF(ISTOF + 49)
      RT_22    = STOF(ISTOF + 50)
      RT_23    = STOF(ISTOF + 51)
      RT_24    = STOF(ISTOF + 52)
      RT_25    = STOF(ISTOF + 53)
      RT_26    = STOF(ISTOF + 54)
      RT_27    = STOF(ISTOF + 55)
      RT_28    = STOF(ISTOF + 56)
      RT_29    = STOF(ISTOF + 57)
      RT_30    = STOF(ISTOF + 58)
      RT_31    = STOF(ISTOF + 59)
      RT_32    = STOF(ISTOF + 60)
      RT_33    = STOF(ISTOF + 61)
      RT_34    = STOF(ISTOF + 62)
      RT_35    = STOF(ISTOF + 63)
      RT_36    = STOF(ISTOF + 64)
      RT_37    = STOF(ISTOF + 65)
      Delta_Vc = STOF(ISTOF + 66)
      RT_38    = STOF(ISTOF + 67)
      RT_39    = STOF(ISTOF + 68)
      Theta_ref = STOF(ISTOF + 69)
      RT_40    = STOF(ISTOF + 70)
      RT_41    = STOF(ISTOF + 71)
      RT_42    = STOF(ISTOF + 72)
      RT_43    = STOF(ISTOF + 73)
      Delta_Vf = STOF(ISTOF + 74)
      RT_44    = STOF(ISTOF + 75)
      RT_45    = STOF(ISTOF + 76)
      RT_46    = STOF(ISTOF + 77)
      RT_47    = STOF(ISTOF + 78)
      UFq      = STOF(ISTOF + 79)
      UFd      = STOF(ISTOF + 80)
      IWd      = STOF(ISTOF + 81)
      IWq      = STOF(ISTOF + 82)
      ISq      = STOF(ISTOF + 83)
      ISd      = STOF(ISTOF + 84)
      Theta    = STOF(ISTOF + 85)
      RT_48    = STOF(ISTOF + 86)
      RT_49    = STOF(ISTOF + 87)
      RT_50    = STOF(ISTOF + 88)
      RT_51    = STOF(ISTOF + 89)
      Vbase    = STOF(ISTOF + 96)
      Ibase    = STOF(ISTOF + 100)
      RT_55    = STOF(ISTOF + 101)
      RT_56    = STOF(ISTOF + 102)
      RT_57    = STOF(ISTOF + 103)
      RT_58    = STOF(ISTOF + 104)
      RT_59    = STOF(ISTOF + 105)
      MVAbase  = STOF(ISTOF + 106)
      wLf_pu   = STOF(ISTOF + 107)
      RT_60    = STOF(ISTOF + 108)
      RT_61    = STOF(ISTOF + 109)
      wCf_pu   = STOF(ISTOF + 110)
      Zbase    = STOF(ISTOF + 111)
      RT_62    = STOF(ISTOF + 112)
      RT_63    = STOF(ISTOF + 113)
      Cbase    = STOF(ISTOF + 114)
      RT_64    = STOF(ISTOF + 115)
      RT_65    = STOF(ISTOF + 116)
      RT_66    = STOF(ISTOF + 117)
      RT_67    = STOF(ISTOF + 118)
      RT_68    = STOF(ISTOF + 119)
      RT_69    = STOF(ISTOF + 120)
      RT_70    = STOF(ISTOF + 121)
      RT_71    = STOF(ISTOF + 122)
      RT_72    = STOF(ISTOF + 123)
      RT_73    = STOF(ISTOF + 124)
      RT_74    = STOF(ISTOF + 125)
      RT_75    = STOF(ISTOF + 126)
      RT_76    = STOF(ISTOF + 127)
      KpI      = STOF(ISTOF + 128)
      TiI      = STOF(ISTOF + 129)
      RT_77    = STOF(ISTOF + 130)
      RT_78    = STOF(ISTOF + 131)
      KpV      = STOF(ISTOF + 132)
      RT_79    = STOF(ISTOF + 133)
      RT_80    = STOF(ISTOF + 134)
      TiV      = STOF(ISTOF + 135)
      RT_81    = STOF(ISTOF + 136)
      Lbase    = STOF(ISTOF + 137)

! Array (1:3) quantities...
      DO IT_0 = 1,3
         Vref(IT_0) = STOF(ISTOF + 0 + IT_0)
         RT_20(IT_0) = STOF(ISTOF + 45 + IT_0)
         RT_52(IT_0) = STOF(ISTOF + 89 + IT_0)
         RT_53(IT_0) = STOF(ISTOF + 92 + IT_0)
         RT_54(IT_0) = STOF(ISTOF + 96 + IT_0)
      END DO


!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Configuration of Models 
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'VF_Control_7.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSD:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 20:[emtconst] Commonly Used Constants (pi...) 
      RT_46 = PI_BY2

! 30:[const] Real Constant 
      RT_37 = 0.0

! 50:[const] Real Constant 
      RT_36 = 0.0

! 60:[pgb] Output Channel 'Ucd'

      PGB(IPGB+1) = RT_36

! 90:[const] Real Constant 
      RT_45 = 0.0

! 100:[const] Real Constant 
      RT_8 = 0.0

! 120:[emtconst] Commonly Used Constants (pi...) 
      RT_41 = PI_BY2

! 130:[const] Real Constant 
      RT_47 = 0.0

! 140:[const] Real Constant 
      RT_11 = 0.0

! 190:[emtconst] Commonly Used Constants (pi...) 
      RT_51 = SQRT_3

! 200:[emtconst] Commonly Used Constants (pi...) 
      RT_50 = SQRT_2

! 210:[const] Real Constant 
      RT_81 = 1.0

! 240:[emtconst] Commonly Used Constants (pi...) 
      RT_48 = SQRT_2

! 260:[emtconst] Commonly Used Constants (pi...) 
      RT_38 = TWO_PI

! 290:[const] Real Constant 
      RT_60 = 1.0

! 310:[emtconst] Commonly Used Constants (pi...) 
      RT_58 = SQRT_3

! 330:[const] Real Constant 
      KpI = 5.0

! 340:[const] Real Constant 
      RT_23 = 1.0

! 350:[const] Real Constant 
      KpV = 1.0

! 360:[const] Real Constant 
      RT_77 = 1.0

! 370:[const] Real Constant 
      RT_80 = 1.0

! 380:[const] Real Constant 
      RT_78 = 5.0

! 390:[const] Real Constant 
      RT_79 = 10.0

! 400:[const] Real Constant 
      RT_22 = 1.0

! 440:[const] Real Constant 
      RT_64 = 1.0

! 460:[polar_rec] Polar Rectangular coordinate converter 
      RT_33 = SQRT(RT_36*RT_36+UFqref*UFqref)
      IF ((ABS(RT_36).GT.1.0E-20).OR.(ABS(UFqref).GT.1.0E-20)) THEN
        RT_35 = ATAN2(UFqref,RT_36)
      ELSE
        RT_35 = 0.0
      ENDIF

! 470:[polar_rec] Polar Rectangular coordinate converter 
      RT_32 = RT_33*COS(RT_35)
      RT_34 = RT_33*SIN(RT_35)

! 480:[sumjct] Summing/Differencing Junctions 
      Delta_Vc = - RT_35 + RT_41

! 490:[gain] Gain Block 
!  Gain
      Wgrid = Wrated * W

! 500:[integral] Interpolated Integrator 
      RVD1_1 = RTCF(NRTCF) ! Initial Output
      NRTCF = NRTCF + 1
      RVD2_1(1) = Wgrid
      RVD2_1(2) = 0.0
      RVD2_2(1) = 0.0
      RVD2_2(2) = 0.0
      Theta = EMTDC_XINT(0, 0, 0, RVD1_1, 1.0, 0.0, -1.0e+22, 1.0e+22, R&
     &VD2_2, RVD2_1)

! 510:[div] Divider 
      IF (ABS(RT_51) .LT. 1.0E-100) THEN
         IF (RT_51 .LT. 0.0)  THEN
            RT_49 = -1.0E100 * VratedLLrms
         ELSE
            RT_49 =  1.0E100 * VratedLLrms
         ENDIF
      ELSE
         RT_49 = VratedLLrms / RT_51
      ENDIF

! 520:[mult] Multiplier 
      Vbase = RT_49 * RT_50

! 530:[square] Square 
      RT_59 = VratedLLrms * VratedLLrms

! 540:[mult] Multiplier 
      Ibase = Iratedphrms * RT_48

! 550:[mult] Multiplier 
      RT_39 = Wref * RT_38

! 560:[integral] Interpolated Integrator 
      RVD1_1 = RTCF(NRTCF) ! Initial Output
      NRTCF = NRTCF + 1
      RVD2_1(1) = RT_39
      RVD2_1(2) = 0.0
      RVD2_2(1) = 0.0
      RVD2_2(2) = 0.0
      Theta_ref = EMTDC_XINT(0, 0, 0, RVD1_1, 1.0, 0.0, -1.0e+22, 1.0e+2&
     &2, RVD2_2, RVD2_1)

! 570:[mult] Multiplier 
      RT_57 = VratedLLrms * Iratedphrms

! 580:[mult] Multiplier 
      MVAbase = RT_57 * RT_58

! 590:[div] Divider 
      IF (ABS(RT_78) .LT. 1.0E-100) THEN
         IF (RT_78 .LT. 0.0)  THEN
            TiI = -1.0E100 * RT_77
         ELSE
            TiI =  1.0E100 * RT_77
         ENDIF
      ELSE
         TiI = RT_77 / RT_78
      ENDIF

! 600:[div] Divider 
      IF (ABS(RT_79) .LT. 1.0E-100) THEN
         IF (RT_79 .LT. 0.0)  THEN
            TiV = -1.0E100 * RT_80
         ELSE
            TiV =  1.0E100 * RT_80
         ENDIF
      ELSE
         TiV = RT_80 / RT_79
      ENDIF

! 610:[gain] Gain Block 
!  Gain
      RT_55 = Wrated * Lf

! 620:[gain] Gain Block 
!  Gain
      RT_56 = Wrated * Cf

! 630:[div] Divider 
      IF (ABS(Ibase) .LT. 1.0E-100) THEN
         IF (Ibase .LT. 0.0)  THEN
            RT_52 = -1.0E100 * I_inv
         ELSE
            RT_52 =  1.0E100 * I_inv
         ENDIF
      ELSE
         RT_52 = I_inv / Ibase
      ENDIF

! 640:[datatap] Scalar/Array Tap 
      RT_65 = RT_52(1)

! 650:[datatap] Scalar/Array Tap 
      RT_66 = RT_52(2)

! 660:[datatap] Scalar/Array Tap 
      RT_67 = RT_52(3)

! 670:[div] Divider 
      IF (ABS(Vbase) .LT. 1.0E-100) THEN
         IF (Vbase .LT. 0.0)  THEN
            RT_53 = -1.0E100 * Vgrid
         ELSE
            RT_53 =  1.0E100 * Vgrid
         ENDIF
      ELSE
         RT_53 = Vgrid / Vbase
      ENDIF

! 680:[datatap] Scalar/Array Tap 
      RT_69 = RT_53(1)

! 690:[datatap] Scalar/Array Tap 
      RT_70 = RT_53(2)

! 700:[datatap] Scalar/Array Tap 
      RT_71 = RT_53(3)

! 710:[div] Divider 
      IF (ABS(Ibase) .LT. 1.0E-100) THEN
         IF (Ibase .LT. 0.0)  THEN
            RT_54 = -1.0E100 * Igrid
         ELSE
            RT_54 =  1.0E100 * Igrid
         ENDIF
      ELSE
         RT_54 = Igrid / Ibase
      ENDIF

! 720:[datatap] Scalar/Array Tap 
      RT_73 = RT_54(1)

! 730:[abcdq0] abc dq0 transformation 
!DQ0 to ABC transformation
      CALL TRDQO(RT_17,RT_18,RT_19,RT_32,RT_34,RT_8,Theta,-1)

! 740:[datatap] Scalar/Array Tap 
      RT_74 = RT_54(2)

! 750:[datatap] Scalar/Array Tap 
      RT_75 = RT_54(3)

! 760:[datamerge] Merges data signals into an array 
      RT_20(1) = RT_17
      RT_20(2) = RT_18
      RT_20(3) = RT_19

! 770:[div] Divider 
      IF (ABS(MVAbase) .LT. 1.0E-100) THEN
         IF (MVAbase .LT. 0.0)  THEN
            Zbase = -1.0E100 * RT_59
         ELSE
            Zbase =  1.0E100 * RT_59
         ENDIF
      ELSE
         Zbase = RT_59 / MVAbase
      ENDIF

! 780:[mult] Multiplier 
      RT_61 = Wrated * Zbase

! 790:[mult] Multiplier 
      wCf_pu = RT_56 * Zbase

! 800:[abcdq0] abc dq0 transformation 
!ABC to DQ0 transformation
      CALL TRDQO(RT_65,RT_66,RT_67,IWd,IWq,RT_68,Theta,1)

! 810:[abcdq0] abc dq0 transformation 
!ABC to DQ0 transformation
      CALL TRDQO(RT_69,RT_70,RT_71,UFd,UFq,RT_72,Theta,1)

! 820:[abcdq0] abc dq0 transformation 
!ABC to DQ0 transformation
      CALL TRDQO(RT_73,RT_74,RT_75,ISd,ISq,RT_76,Theta,1)

! 830:[sumjct] Summing/Differencing Junctions 
      RT_9 = + RT_11 - UFd

! 840:[pi_ctlr] PI Controller \w Interpolation 
      RVD1_1 = RTCF(NRTCF)
      NRTCF = NRTCF + 1
      RVD2_1(1) = RT_9
      RVD2_1(2) = 0.0
      RT_10 = EMTDC_XPI(0,KpV,TiV,-10000000000.0,10000000000.0,RVD1_1,RV&
     &D2_1)

! 850:[gain] Gain Block 
!  Gain
      RT_13 = wCf_pu * UFq

! 860:[gain] Gain Block 
!  Gain
      RT_12 = wCf_pu * UFd

! 870:[sumjct] Summing/Differencing Junctions 
      Err = + UFqref - UFq

! 880:[pi_ctlr] PI Controller \w Interpolation 
      RVD1_1 = RTCF(NRTCF)
      NRTCF = NRTCF + 1
      RVD2_1(1) = Err
      RVD2_1(2) = 0.0
      RT_7 = EMTDC_XPI(0,KpV,TiV,-10000000000.0,10000000000.0,RVD1_1,RVD&
     &2_1)

! 890:[sumjct] Summing/Differencing Junctions 
      RT_3 = + ISq + RT_7 - RT_12

! 900:[div] Divider 
      IF (ABS(RT_61) .LT. 1.0E-100) THEN
         IF (RT_61 .LT. 0.0)  THEN
            Cbase = -1.0E100 * RT_60
         ELSE
            Cbase =  1.0E100 * RT_60
         ENDIF
      ELSE
         Cbase = RT_60 / RT_61
      ENDIF

! 910:[mult] Multiplier 
      RT_28 = IWd * UFq

! 920:[mult] Multiplier 
      RT_29 = IWq * UFd

! 930:[mult] Multiplier 
      RT_30 = IWd * UFd

! 940:[mult] Multiplier 
      RT_31 = UFq * IWq

! 950:[sumjct] Summing/Differencing Junctions 
      RT_4 = + ISd + RT_10 + RT_13

! 960:[sumjct] Summing/Differencing Junctions 
      RT_25 = + RT_30 + RT_31

! 970:[sumjct] Summing/Differencing Junctions 
      RT_27 = - RT_28 + RT_29

! 980:[Current_Limiter_3]  
      CALL Current_Limiter_3Dyn(RT_1, RT_2, RT_3, RT_4, Theta)


! 990:[polar_rec] Polar Rectangular coordinate converter 
      RT_43 = SQRT(UFd*UFd+UFq*UFq)
      IF ((ABS(UFd).GT.1.0E-20).OR.(ABS(UFq).GT.1.0E-20)) THEN
        RT_42 = ATAN2(UFq,UFd)
      ELSE
        RT_42 = 0.0
      ENDIF

! 1000:[div] Divider 
      IF (ABS(Cbase) .LT. 1.0E-100) THEN
         IF (Cbase .LT. 0.0)  THEN
            RT_63 = -1.0E100 * Cf
         ELSE
            RT_63 =  1.0E100 * Cf
         ENDIF
      ELSE
         RT_63 = Cf / Cbase
      ENDIF

! 1010:[mult] Multiplier 
      RT_24 = RT_25 * RT_22

! 1020:[mult] Multiplier 
      RT_26 = RT_27 * RT_23

! 1030:[sumjct] Summing/Differencing Junctions 
      RT_5 = + RT_1 - IWq

! 1040:[sumjct] Summing/Differencing Junctions 
      RT_21 = + RT_2 - IWd

! 1050:[sumjct] Summing/Differencing Junctions 
      Delta_Vf = - RT_42 + RT_46

! 1060:[mult] Multiplier 
      RT_62 = RT_63 * RT_64

! 1070:[div] Divider 
      IF (ABS(Zbase) .LT. 1.0E-100) THEN
         IF (Zbase .LT. 0.0)  THEN
            wLf_pu = -1.0E100 * RT_55
         ELSE
            wLf_pu =  1.0E100 * RT_55
         ENDIF
      ELSE
         wLf_pu = RT_55 / Zbase
      ENDIF

! 1080:[realpole] Real Pole 
!  Real_Pole
      Pdq = REALPOLE(0,1,0,1.0,0.001,RT_24,0.0,-1.0E20,1.0E20)

! 1090:[realpole] Real Pole 
!  Real_Pole
      Qdq = REALPOLE(0,1,0,1.0,0.001,RT_26,0.0,-1.0E20,1.0E20)

! 1100:[sumjct] Summing/Differencing Junctions 
      RT_40 = + Theta - Theta_ref

! 1110:[pi_ctlr] PI Controller \w Interpolation 
      RVD1_1 = RTCF(NRTCF)
      NRTCF = NRTCF + 1
      RVD2_1(1) = RT_5
      RVD2_1(2) = 0.0
      RT_6 = EMTDC_XPI(0,KpI,TiI,-10000000000.0,10000000000.0,RVD1_1,RVD&
     &2_1)

! 1120:[gain] Gain Block 
!  Gain
      RT_16 = wLf_pu * IWd

! 1130:[pi_ctlr] PI Controller \w Interpolation 
      RVD1_1 = RTCF(NRTCF)
      NRTCF = NRTCF + 1
      RVD2_1(1) = RT_21
      RVD2_1(2) = 0.0
      RT_14 = EMTDC_XPI(0,KpI,TiI,-10000000000.0,10000000000.0,RVD1_1,RV&
     &D2_1)

! 1140:[gain] Gain Block 
!  Gain
      Vref = Vbase * RT_20

! 1150:[sumjct] Summing/Differencing Junctions 
      RT_44 = + Delta_Vc - Delta_Vf

! 1160:[pgb] Output Channel '1'

      PGB(IPGB+2) = RT_62

! 1170:[pgb] Output Channel 'Isq'

      PGB(IPGB+3) = ISq

! 1180:[pgb] Output Channel 'Isd'

      PGB(IPGB+4) = ISd

! 1190:[pgb] Output Channel 'Ufq'

      PGB(IPGB+5) = UFq

! 1200:[pgb] Output Channel 'Ufd'

      PGB(IPGB+6) = UFd

! 1210:[pgb] Output Channel '2'

      PGB(IPGB+7) = wCf_pu

! 1220:[pgb] Output Channel 'Icq'

      PGB(IPGB+8) = IWq

! 1230:[pgb] Output Channel 'Icd'

      PGB(IPGB+9) = IWd

! 1250:[pgb] Output Channel 'P'

      PGB(IPGB+10) = Pdq

! 1270:[pgb] Output Channel 'Q'

      PGB(IPGB+11) = Qdq

! 1280:[pgb] Output Channel 'wt'

      PGB(IPGB+12) = 57.29577951 * Theta_ref

! 1290:[pgb] Output Channel 'Theta_int'

      PGB(IPGB+13) = RT_40

! 1300:[div] Divider 
      IF (ABS(Wrated) .LT. 1.0E-100) THEN
         IF (Wrated .LT. 0.0)  THEN
            Lbase = -1.0E100 * Zbase
         ELSE
            Lbase =  1.0E100 * Zbase
         ENDIF
      ELSE
         Lbase = Zbase / Wrated
      ENDIF

! 1310:[pgb] Output Channel 'erri'

      PGB(IPGB+14) = RT_5

! 1320:[sumjct] Summing/Differencing Junctions 
      Ucq = + UFq + RT_6 - RT_16

! 1330:[pgb] Output Channel 'errv'

      PGB(IPGB+15) = Err

! 1340:[pgb] Output Channel 'Untitled'

      PGB(IPGB+16) = Zbase

! 1350:[gain] Gain Block 
!  Gain
      RT_15 = wLf_pu * IWq

! 1370:[sumjct] Summing/Differencing Junctions 
      Ucd = + UFd + RT_14 + RT_15

! 1380:[pgb] Output Channel 'id'

      PGB(IPGB+17) = ISd

! 1400:[pgb] Output Channel 'Delta_Vc'

      PGB(IPGB+18) = Delta_Vc

! 1410:[pgb] Output Channel 'Ucq'

      PGB(IPGB+19) = UFqref

! 1420:[pgb] Output Channel 'Delta_delta_VfVc'

      PGB(IPGB+20) = RT_44

! 1430:[pgb] Output Channel 'Delta_Vf'

      PGB(IPGB+21) = Delta_Vf

!---------------------------------------
! Feedbacks and transfers to storage 
!---------------------------------------

      STOF(ISTOF + 13) = W
      STOF(ISTOF + 14) = UFqref
      STOF(ISTOF + 15) = Wgrid
      STOF(ISTOF + 16) = Pdq
      STOF(ISTOF + 17) = Qdq
      STOF(ISTOF + 18) = Wref
      STOF(ISTOF + 19) = VratedLLrms
      STOF(ISTOF + 20) = Iratedphrms
      STOF(ISTOF + 21) = Wrated
      STOF(ISTOF + 22) = Lf
      STOF(ISTOF + 23) = Cf
      STOF(ISTOF + 24) = RT_1
      STOF(ISTOF + 25) = RT_2
      STOF(ISTOF + 26) = RT_3
      STOF(ISTOF + 27) = RT_4
      STOF(ISTOF + 28) = RT_5
      STOF(ISTOF + 29) = RT_6
      STOF(ISTOF + 30) = Err
      STOF(ISTOF + 31) = RT_7
      STOF(ISTOF + 32) = RT_8
      STOF(ISTOF + 33) = RT_9
      STOF(ISTOF + 34) = RT_10
      STOF(ISTOF + 35) = RT_11
      STOF(ISTOF + 36) = RT_12
      STOF(ISTOF + 37) = RT_13
      STOF(ISTOF + 38) = RT_14
      STOF(ISTOF + 39) = RT_15
      STOF(ISTOF + 40) = Ucd
      STOF(ISTOF + 41) = RT_16
      STOF(ISTOF + 42) = Ucq
      STOF(ISTOF + 43) = RT_17
      STOF(ISTOF + 44) = RT_18
      STOF(ISTOF + 45) = RT_19
      STOF(ISTOF + 49) = RT_21
      STOF(ISTOF + 50) = RT_22
      STOF(ISTOF + 51) = RT_23
      STOF(ISTOF + 52) = RT_24
      STOF(ISTOF + 53) = RT_25
      STOF(ISTOF + 54) = RT_26
      STOF(ISTOF + 55) = RT_27
      STOF(ISTOF + 56) = RT_28
      STOF(ISTOF + 57) = RT_29
      STOF(ISTOF + 58) = RT_30
      STOF(ISTOF + 59) = RT_31
      STOF(ISTOF + 60) = RT_32
      STOF(ISTOF + 61) = RT_33
      STOF(ISTOF + 62) = RT_34
      STOF(ISTOF + 63) = RT_35
      STOF(ISTOF + 64) = RT_36
      STOF(ISTOF + 65) = RT_37
      STOF(ISTOF + 66) = Delta_Vc
      STOF(ISTOF + 67) = RT_38
      STOF(ISTOF + 68) = RT_39
      STOF(ISTOF + 69) = Theta_ref
      STOF(ISTOF + 70) = RT_40
      STOF(ISTOF + 71) = RT_41
      STOF(ISTOF + 72) = RT_42
      STOF(ISTOF + 73) = RT_43
      STOF(ISTOF + 74) = Delta_Vf
      STOF(ISTOF + 75) = RT_44
      STOF(ISTOF + 76) = RT_45
      STOF(ISTOF + 77) = RT_46
      STOF(ISTOF + 78) = RT_47
      STOF(ISTOF + 79) = UFq
      STOF(ISTOF + 80) = UFd
      STOF(ISTOF + 81) = IWd
      STOF(ISTOF + 82) = IWq
      STOF(ISTOF + 83) = ISq
      STOF(ISTOF + 84) = ISd
      STOF(ISTOF + 85) = Theta
      STOF(ISTOF + 86) = RT_48
      STOF(ISTOF + 87) = RT_49
      STOF(ISTOF + 88) = RT_50
      STOF(ISTOF + 89) = RT_51
      STOF(ISTOF + 96) = Vbase
      STOF(ISTOF + 100) = Ibase
      STOF(ISTOF + 101) = RT_55
      STOF(ISTOF + 102) = RT_56
      STOF(ISTOF + 103) = RT_57
      STOF(ISTOF + 104) = RT_58
      STOF(ISTOF + 105) = RT_59
      STOF(ISTOF + 106) = MVAbase
      STOF(ISTOF + 107) = wLf_pu
      STOF(ISTOF + 108) = RT_60
      STOF(ISTOF + 109) = RT_61
      STOF(ISTOF + 110) = wCf_pu
      STOF(ISTOF + 111) = Zbase
      STOF(ISTOF + 112) = RT_62
      STOF(ISTOF + 113) = RT_63
      STOF(ISTOF + 114) = Cbase
      STOF(ISTOF + 115) = RT_64
      STOF(ISTOF + 116) = RT_65
      STOF(ISTOF + 117) = RT_66
      STOF(ISTOF + 118) = RT_67
      STOF(ISTOF + 119) = RT_68
      STOF(ISTOF + 120) = RT_69
      STOF(ISTOF + 121) = RT_70
      STOF(ISTOF + 122) = RT_71
      STOF(ISTOF + 123) = RT_72
      STOF(ISTOF + 124) = RT_73
      STOF(ISTOF + 125) = RT_74
      STOF(ISTOF + 126) = RT_75
      STOF(ISTOF + 127) = RT_76
      STOF(ISTOF + 128) = KpI
      STOF(ISTOF + 129) = TiI
      STOF(ISTOF + 130) = RT_77
      STOF(ISTOF + 131) = RT_78
      STOF(ISTOF + 132) = KpV
      STOF(ISTOF + 133) = RT_79
      STOF(ISTOF + 134) = RT_80
      STOF(ISTOF + 135) = TiV
      STOF(ISTOF + 136) = RT_81
      STOF(ISTOF + 137) = Lbase

! Array (1:3) quantities...
      DO IT_0 = 1,3
         STOF(ISTOF + 0 + IT_0) = Vref(IT_0)
         STOF(ISTOF + 3 + IT_0) = Igrid(IT_0)
         STOF(ISTOF + 6 + IT_0) = Vgrid(IT_0)
         STOF(ISTOF + 9 + IT_0) = I_inv(IT_0)
         STOF(ISTOF + 45 + IT_0) = RT_20(IT_0)
         STOF(ISTOF + 89 + IT_0) = RT_52(IT_0)
         STOF(ISTOF + 92 + IT_0) = RT_53(IT_0)
         STOF(ISTOF + 96 + IT_0) = RT_54(IT_0)
      END DO


!---------------------------------------
! Transfer to Exports
!---------------------------------------
      !Vref     is output
      !Wgrid    is output
      !Pdq      is output
      !Qdq      is output

!---------------------------------------
! Close Model Data read 
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE VF_Control_7Out()

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------

!     SUBR    Current_Limiter_3Out  ! 

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Electrical Node Indices

! Control Signals
      REAL     RT_8, RT_11, RT_22, RT_23, RT_36
      REAL     RT_37, RT_38, RT_41, RT_45, RT_46
      REAL     RT_47, RT_48, RT_50, RT_51, RT_58
      REAL     RT_60, RT_64, KpI, RT_77, RT_78
      REAL     KpV, RT_79, RT_80, RT_81

! Internal Variables

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOL, ISTOI, ISTOF, ISTOC          ! Storage Indices
      INTEGER ISUBS                               ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      ISTOL = TXFR(NTXFR,1)
      ISTOI = TXFR(NTXFR,2)
      ISTOF = TXFR(NTXFR,3)
      ISTOC = TXFR(NTXFR,4)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      NPGB      = NPGB + 21
      NNODE     = NNODE + 2
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Transfers from storage arrays 
!---------------------------------------

      RT_8     = STOF(ISTOF + 32)
      RT_11    = STOF(ISTOF + 35)
      RT_22    = STOF(ISTOF + 50)
      RT_23    = STOF(ISTOF + 51)
      RT_36    = STOF(ISTOF + 64)
      RT_37    = STOF(ISTOF + 65)
      RT_38    = STOF(ISTOF + 67)
      RT_41    = STOF(ISTOF + 71)
      RT_45    = STOF(ISTOF + 76)
      RT_46    = STOF(ISTOF + 77)
      RT_47    = STOF(ISTOF + 78)
      RT_48    = STOF(ISTOF + 86)
      RT_50    = STOF(ISTOF + 88)
      RT_51    = STOF(ISTOF + 89)
      RT_58    = STOF(ISTOF + 104)
      RT_60    = STOF(ISTOF + 108)
      RT_64    = STOF(ISTOF + 115)
      KpI      = STOF(ISTOF + 128)
      RT_77    = STOF(ISTOF + 130)
      RT_78    = STOF(ISTOF + 131)
      KpV      = STOF(ISTOF + 132)
      RT_79    = STOF(ISTOF + 133)
      RT_80    = STOF(ISTOF + 134)
      RT_81    = STOF(ISTOF + 136)


!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Configuration of Models 
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'VF_Control_7.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSO:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 20:[emtconst] Commonly Used Constants (pi...) 
      RT_46 = PI_BY2

! 30:[const] Real Constant 

      RT_37 = 0.0

! 50:[const] Real Constant 

      RT_36 = 0.0

! 90:[const] Real Constant 

      RT_45 = 0.0

! 100:[const] Real Constant 

      RT_8 = 0.0

! 120:[emtconst] Commonly Used Constants (pi...) 
      RT_41 = PI_BY2

! 130:[const] Real Constant 

      RT_47 = 0.0

! 140:[const] Real Constant 

      RT_11 = 0.0

! 190:[emtconst] Commonly Used Constants (pi...) 
      RT_51 = SQRT_3

! 200:[emtconst] Commonly Used Constants (pi...) 
      RT_50 = SQRT_2

! 210:[const] Real Constant 

      RT_81 = 1.0

! 240:[emtconst] Commonly Used Constants (pi...) 
      RT_48 = SQRT_2

! 260:[emtconst] Commonly Used Constants (pi...) 
      RT_38 = TWO_PI

! 290:[const] Real Constant 

      RT_60 = 1.0

! 310:[emtconst] Commonly Used Constants (pi...) 
      RT_58 = SQRT_3

! 330:[const] Real Constant 

      KpI = 5.0

! 340:[const] Real Constant 

      RT_23 = 1.0

! 350:[const] Real Constant 

      KpV = 1.0

! 360:[const] Real Constant 

      RT_77 = 1.0

! 370:[const] Real Constant 

      RT_80 = 1.0

! 380:[const] Real Constant 

      RT_78 = 5.0

! 390:[const] Real Constant 

      RT_79 = 10.0

! 400:[const] Real Constant 

      RT_22 = 1.0

! 440:[const] Real Constant 

      RT_64 = 1.0

! 980:[Current_Limiter_3]  
      CALL Current_Limiter_3Out()


!---------------------------------------
! Feedbacks and transfers to storage 
!---------------------------------------

      STOF(ISTOF + 32) = RT_8
      STOF(ISTOF + 35) = RT_11
      STOF(ISTOF + 50) = RT_22
      STOF(ISTOF + 51) = RT_23
      STOF(ISTOF + 64) = RT_36
      STOF(ISTOF + 65) = RT_37
      STOF(ISTOF + 67) = RT_38
      STOF(ISTOF + 71) = RT_41
      STOF(ISTOF + 76) = RT_45
      STOF(ISTOF + 77) = RT_46
      STOF(ISTOF + 78) = RT_47
      STOF(ISTOF + 86) = RT_48
      STOF(ISTOF + 88) = RT_50
      STOF(ISTOF + 89) = RT_51
      STOF(ISTOF + 104) = RT_58
      STOF(ISTOF + 108) = RT_60
      STOF(ISTOF + 115) = RT_64
      STOF(ISTOF + 128) = KpI
      STOF(ISTOF + 130) = RT_77
      STOF(ISTOF + 131) = RT_78
      STOF(ISTOF + 132) = KpV
      STOF(ISTOF + 133) = RT_79
      STOF(ISTOF + 134) = RT_80
      STOF(ISTOF + 136) = RT_81


!---------------------------------------
! Close Model Data read 
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE VF_Control_7Dyn_Begin()

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------

!     SUBR    Current_Limiter_3Dyn_Begin  ! 

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments

! Electrical Node Indices

! Control Signals
      REAL     RT_8, RT_11, RT_22, RT_23, RT_36
      REAL     RT_37, RT_38, RT_41, RT_45, RT_46
      REAL     RT_47, RT_48, RT_50, RT_51, RT_58
      REAL     RT_60, RT_64, KpI, RT_77, RT_78
      REAL     KpV, RT_79, RT_80, RT_81

! Internal Variables

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISUBS                               ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------


! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      NNODE     = NNODE + 2
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 20:[emtconst] Commonly Used Constants (pi...) 
      RT_46 = PI_BY2

! 30:[const] Real Constant 
      RT_37 = 0.0

! 50:[const] Real Constant 
      RT_36 = 0.0

! 60:[pgb] Output Channel 'Ucd'

! 90:[const] Real Constant 
      RT_45 = 0.0

! 100:[const] Real Constant 
      RT_8 = 0.0

! 120:[emtconst] Commonly Used Constants (pi...) 
      RT_41 = PI_BY2

! 130:[const] Real Constant 
      RT_47 = 0.0

! 140:[const] Real Constant 
      RT_11 = 0.0

! 190:[emtconst] Commonly Used Constants (pi...) 
      RT_51 = SQRT_3

! 200:[emtconst] Commonly Used Constants (pi...) 
      RT_50 = SQRT_2

! 210:[const] Real Constant 
      RT_81 = 1.0

! 240:[emtconst] Commonly Used Constants (pi...) 
      RT_48 = SQRT_2

! 260:[emtconst] Commonly Used Constants (pi...) 
      RT_38 = TWO_PI

! 290:[const] Real Constant 
      RT_60 = 1.0

! 310:[emtconst] Commonly Used Constants (pi...) 
      RT_58 = SQRT_3

! 330:[const] Real Constant 
      KpI = 5.0

! 340:[const] Real Constant 
      RT_23 = 1.0

! 350:[const] Real Constant 
      KpV = 1.0

! 360:[const] Real Constant 
      RT_77 = 1.0

! 370:[const] Real Constant 
      RT_80 = 1.0

! 380:[const] Real Constant 
      RT_78 = 5.0

! 390:[const] Real Constant 
      RT_79 = 10.0

! 400:[const] Real Constant 
      RT_22 = 1.0

! 440:[const] Real Constant 
      RT_64 = 1.0

! 460:[polar_rec] Polar Rectangular coordinate converter 

! 470:[polar_rec] Polar Rectangular coordinate converter 

! 480:[sumjct] Summing/Differencing Junctions 

! 490:[gain] Gain Block 

! 500:[integral] Interpolated Integrator 
      RTCF(NRTCF) = 0.0
      NRTCF = NRTCF + 1

! 510:[div] Divider 

! 520:[mult] Multiplier 

! 530:[square] Square 

! 540:[mult] Multiplier 

! 550:[mult] Multiplier 

! 560:[integral] Interpolated Integrator 
      RTCF(NRTCF) = 0.0
      NRTCF = NRTCF + 1

! 570:[mult] Multiplier 

! 580:[mult] Multiplier 

! 590:[div] Divider 

! 600:[div] Divider 

! 610:[gain] Gain Block 

! 620:[gain] Gain Block 

! 630:[div] Divider 

! 640:[datatap] Scalar/Array Tap 

! 650:[datatap] Scalar/Array Tap 

! 660:[datatap] Scalar/Array Tap 

! 670:[div] Divider 

! 680:[datatap] Scalar/Array Tap 

! 690:[datatap] Scalar/Array Tap 

! 700:[datatap] Scalar/Array Tap 

! 710:[div] Divider 

! 720:[datatap] Scalar/Array Tap 

! 730:[abcdq0] abc dq0 transformation 

! 740:[datatap] Scalar/Array Tap 

! 750:[datatap] Scalar/Array Tap 

! 760:[datamerge] Merges data signals into an array 

! 770:[div] Divider 

! 780:[mult] Multiplier 

! 790:[mult] Multiplier 

! 800:[abcdq0] abc dq0 transformation 

! 810:[abcdq0] abc dq0 transformation 

! 820:[abcdq0] abc dq0 transformation 

! 830:[sumjct] Summing/Differencing Junctions 

! 840:[pi_ctlr] PI Controller \w Interpolation 
      RTCF(NRTCF) = 0.0
      NRTCF = NRTCF + 1

! 850:[gain] Gain Block 

! 860:[gain] Gain Block 

! 870:[sumjct] Summing/Differencing Junctions 

! 880:[pi_ctlr] PI Controller \w Interpolation 
      RTCF(NRTCF) = 0.0
      NRTCF = NRTCF + 1

! 890:[sumjct] Summing/Differencing Junctions 

! 900:[div] Divider 

! 910:[mult] Multiplier 

! 920:[mult] Multiplier 

! 930:[mult] Multiplier 

! 940:[mult] Multiplier 

! 950:[sumjct] Summing/Differencing Junctions 

! 960:[sumjct] Summing/Differencing Junctions 

! 970:[sumjct] Summing/Differencing Junctions 

! 980:[Current_Limiter_3]  
      CALL Current_Limiter_3Dyn_Begin()


! 990:[polar_rec] Polar Rectangular coordinate converter 

! 1000:[div] Divider 

! 1010:[mult] Multiplier 

! 1020:[mult] Multiplier 

! 1030:[sumjct] Summing/Differencing Junctions 

! 1040:[sumjct] Summing/Differencing Junctions 

! 1050:[sumjct] Summing/Differencing Junctions 

! 1060:[mult] Multiplier 

! 1070:[div] Divider 

! 1080:[realpole] Real Pole 

! 1090:[realpole] Real Pole 

! 1100:[sumjct] Summing/Differencing Junctions 

! 1110:[pi_ctlr] PI Controller \w Interpolation 
      RTCF(NRTCF) = 0.0
      NRTCF = NRTCF + 1

! 1120:[gain] Gain Block 

! 1130:[pi_ctlr] PI Controller \w Interpolation 
      RTCF(NRTCF) = 0.0
      NRTCF = NRTCF + 1

! 1140:[gain] Gain Block 

! 1150:[sumjct] Summing/Differencing Junctions 

! 1160:[pgb] Output Channel '1'

! 1170:[pgb] Output Channel 'Isq'

! 1180:[pgb] Output Channel 'Isd'

! 1190:[pgb] Output Channel 'Ufq'

! 1200:[pgb] Output Channel 'Ufd'

! 1210:[pgb] Output Channel '2'

! 1220:[pgb] Output Channel 'Icq'

! 1230:[pgb] Output Channel 'Icd'

! 1250:[pgb] Output Channel 'P'

! 1270:[pgb] Output Channel 'Q'

! 1280:[pgb] Output Channel 'wt'

! 1290:[pgb] Output Channel 'Theta_int'

! 1300:[div] Divider 

! 1310:[pgb] Output Channel 'erri'

! 1320:[sumjct] Summing/Differencing Junctions 

! 1330:[pgb] Output Channel 'errv'

! 1340:[pgb] Output Channel 'Untitled'

! 1350:[gain] Gain Block 

! 1370:[sumjct] Summing/Differencing Junctions 

! 1380:[pgb] Output Channel 'id'

! 1400:[pgb] Output Channel 'Delta_Vc'

! 1410:[pgb] Output Channel 'Ucq'

! 1420:[pgb] Output Channel 'Delta_delta_VfVc'

! 1430:[pgb] Output Channel 'Delta_Vf'

      RETURN
      END

!=======================================================================

      SUBROUTINE VF_Control_7Out_Begin()

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------

!     SUBR    Current_Limiter_3Out_Begin  ! 

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments

! Electrical Node Indices

! Control Signals
      REAL     RT_8, RT_11, RT_22, RT_23, RT_36
      REAL     RT_37, RT_38, RT_41, RT_45, RT_46
      REAL     RT_47, RT_48, RT_50, RT_51, RT_58
      REAL     RT_60, RT_64, KpI, RT_77, RT_78
      REAL     KpV, RT_79, RT_80, RT_81

! Internal Variables

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISUBS                               ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------


! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      NNODE     = NNODE + 2
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 20:[emtconst] Commonly Used Constants (pi...) 
      RT_46 = PI_BY2

! 30:[const] Real Constant 
      RT_37 = 0.0

! 50:[const] Real Constant 
      RT_36 = 0.0

! 90:[const] Real Constant 
      RT_45 = 0.0

! 100:[const] Real Constant 
      RT_8 = 0.0

! 120:[emtconst] Commonly Used Constants (pi...) 
      RT_41 = PI_BY2

! 130:[const] Real Constant 
      RT_47 = 0.0

! 140:[const] Real Constant 
      RT_11 = 0.0

! 190:[emtconst] Commonly Used Constants (pi...) 
      RT_51 = SQRT_3

! 200:[emtconst] Commonly Used Constants (pi...) 
      RT_50 = SQRT_2

! 210:[const] Real Constant 
      RT_81 = 1.0

! 240:[emtconst] Commonly Used Constants (pi...) 
      RT_48 = SQRT_2

! 260:[emtconst] Commonly Used Constants (pi...) 
      RT_38 = TWO_PI

! 290:[const] Real Constant 
      RT_60 = 1.0

! 310:[emtconst] Commonly Used Constants (pi...) 
      RT_58 = SQRT_3

! 330:[const] Real Constant 
      KpI = 5.0

! 340:[const] Real Constant 
      RT_23 = 1.0

! 350:[const] Real Constant 
      KpV = 1.0

! 360:[const] Real Constant 
      RT_77 = 1.0

! 370:[const] Real Constant 
      RT_80 = 1.0

! 380:[const] Real Constant 
      RT_78 = 5.0

! 390:[const] Real Constant 
      RT_79 = 10.0

! 400:[const] Real Constant 
      RT_22 = 1.0

! 440:[const] Real Constant 
      RT_64 = 1.0

! 980:[Current_Limiter_3]  
      CALL Current_Limiter_3Out_Begin()


      RETURN
      END

